<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>凡夫俗子</title>
  <subtitle>凡夫俗子博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.wangwenfan.com/"/>
  <updated>2017-09-28T06:44:31.669Z</updated>
  <id>http://www.wangwenfan.com/</id>
  
  <author>
    <name>王文凡</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP7新特性总结</title>
    <link href="http://www.wangwenfan.com/posts/uncategorized/2017-09-28-PHP7%E6%96%B0%E7%89%B9%E6%80%A7%E6%80%BB%E7%BB%93.html"/>
    <id>http://www.wangwenfan.com/posts/uncategorized/2017-09-28-PHP7新特性总结.html</id>
    <published>2017-09-28T06:43:41.000Z</published>
    <updated>2017-09-28T06:44:31.669Z</updated>
    
    <content type="html"><![CDATA[<h4 id="为什么PHP7比PHP5性能提升了？"><a href="#为什么PHP7比PHP5性能提升了？" class="headerlink" title="为什么PHP7比PHP5性能提升了？"></a>为什么PHP7比PHP5性能提升了？</h4><ul>
<li>变量存储字节减小，减少内存占用，提升变量操作速度</li>
<li>改善数组结构，数组元素和 hash 映射表被分配在同一块内存里，降低了内存占用、提升了 cpu 缓存命中率</li>
<li>改进了函数的调用机制，通过优化参数传递的环节，减少了一些指令，提高执行效率</li>
<li>具体见：<a href="http://php.net/manual/zh/migration70.new-features.php" target="_blank" rel="external">官方文档</a></li>
</ul>
<h4 id="标量类型申明"><a href="#标量类型申明" class="headerlink" title="标量类型申明"></a>标量类型申明</h4><blockquote>
<p>类型声明允许函数在调用时要求参数为特定类型。 如果给出的值类型不对，那么将会产生一个错误： 在PHP 5中，这将是一个可恢复的致命错误，而在PHP 7中将会抛出一个TypeError异常。<br>为了指定一个类型声明，类型应该加到参数名前。这个声明可以通过将参数的默认值设为NULL来实现允许传递NULL。</p>
</blockquote>
<ul>
<li>php5支持的类型有<code>Classname</code>、<code>interfacename</code>、<code>self</code>、<code>array</code>、<code>callable</code>。</li>
<li>php7新增的类型有<code>bool</code>、<code>float</code>、<code>int</code>、<code>string</code>。</li>
<li>具体见：<a href="http://php.net/manual/zh/functions.arguments.php#functions.arguments.type-declaration" target="_blank" rel="external">类型申明</a></li>
</ul>
<h4 id="返回值类型申明"><a href="#返回值类型申明" class="headerlink" title="返回值类型申明"></a>返回值类型申明</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">arraysSum</span><span class="params">(array $arrays)</span>: <span class="title">array</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> $arrays;</div><div class="line">&#125;</div><div class="line">$re = arraysSum([<span class="number">1</span>, <span class="number">2</span>]);<span class="comment">//这里参数必须填数组</span></div><div class="line">var_dump($re);</div></pre></td></tr></table></figure>
<ul>
<li>上面的函数申明参数和返回值为array，参数里为非数组运行就会报错。</li>
<li>具体见：<a href="http://php.net/manual/zh/functions.returning-values.php#functions.returning-values.type-declaration" target="_blank" rel="external">返回值类型申明</a></li>
</ul>
<h4 id="null合并运算符"><a href="#null合并运算符" class="headerlink" title="null合并运算符"></a>null合并运算符</h4><blockquote>
<p>由于日常使用中存在大量同时使用三元表达式和 <code>isset()</code>的情况， 我们添加了<code>null</code>合并运算符 <code>(??)</code> 这个语法糖。如果变量存在且值不为<code>NULL</code>， 它就会返回自身的值，否则返回它的第二个操作数。</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//($_GET['user']不存在$username为nobody)</span></div><div class="line"><span class="comment">// php5写法</span></div><div class="line">$username = <span class="keyword">isset</span>($_GET[<span class="string">'user'</span>]) ? $_GET[<span class="string">'user'</span>] : <span class="string">'nobody'</span>;</div><div class="line"><span class="comment">// PHP7写法</span></div><div class="line">$username = $_GET[<span class="string">'user'</span>] ?? <span class="string">'nobody'</span>;</div><div class="line"><span class="comment">// PHP7写法($_GET['user']不存在获取$_POST['user']，还不存在为 'nobody')</span></div><div class="line">$username = $_GET[<span class="string">'user'</span>] ?? $_POST[<span class="string">'user'</span>] ?? <span class="string">'nobody'</span>;</div></pre></td></tr></table></figure>
<h4 id="组合比较符"><a href="#组合比较符" class="headerlink" title="组合比较符"></a>组合比较符</h4><blockquote>
<p>太空船操作符用于比较两个表达式。当<code>$a</code>小于、等于或大于<code>$b</code>时它分别返回-1、0或1。 比较的原则是沿用 PHP 的常规<a href="http://php.net/manual/zh/types.comparisons.php" target="_blank" rel="external">比较规则</a>进行的。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">echo 1 &lt;=&gt; 1; // 0</div><div class="line">echo 1 &lt;=&gt; 2; // -1</div><div class="line">echo 2 &lt;=&gt; 1; // 1</div></pre></td></tr></table></figure>
<h4 id="通过-define-定义常量数组"><a href="#通过-define-定义常量数组" class="headerlink" title="通过 define() 定义常量数组"></a>通过 <code>define()</code> 定义常量数组</h4><blockquote>
<p>Array 类型的常量现在可以通过 define() 来定义。在 PHP5.6 中仅能通过 const 定义。</p>
</blockquote>
<h4 id="匿名类"><a href="#匿名类" class="headerlink" title="匿名类"></a>匿名类</h4><blockquote>
<p>现在支持通过<code>new class</code> 来实例化一个匿名类，这可以用来替代一些“用后即焚”的完整类定义。</p>
</blockquote>
<ul>
<li>详细可参考<a href="http://php.net/manual/zh/language.oop5.anonymous.php" target="_blank" rel="external">匿名类</a></li>
</ul>
<h4 id="Unicode-codepoint-转译语法"><a href="#Unicode-codepoint-转译语法" class="headerlink" title="Unicode codepoint 转译语法"></a>Unicode codepoint 转译语法</h4><blockquote>
<p>这接受一个以16进制形式的 Unicode codepoint，并打印出一个双引号或heredoc包围的 UTF-8 编码格式的字符串。 可以接受任何有效的 codepoint，并且开头的 0 是可以省略的。</p>
</blockquote>
<h4 id="Closure-call"><a href="#Closure-call" class="headerlink" title="Closure::call()"></a>Closure::call()</h4><blockquote>
<p><code>Closure::call()</code> 现在有着更好的性能，简短干练的暂时绑定一个方法到对象上闭包并调用它。</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;<span class="keyword">private</span> $x = <span class="number">1</span>;&#125;</div><div class="line"></div><div class="line"><span class="comment">// PHP 7 之前版本的代码</span></div><div class="line">$getXCB = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;<span class="keyword">return</span> <span class="keyword">$this</span>-&gt;x;&#125;;</div><div class="line">$getX = $getXCB-&gt;bindTo(<span class="keyword">new</span> A, <span class="string">'A'</span>); <span class="comment">// 中间层闭包</span></div><div class="line"><span class="keyword">echo</span> $getX();</div><div class="line"></div><div class="line"><span class="comment">// PHP 7+ 及更高版本的代码</span></div><div class="line">$getX = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;<span class="keyword">return</span> <span class="keyword">$this</span>-&gt;x;&#125;;</div><div class="line"><span class="keyword">echo</span> $getX-&gt;call(<span class="keyword">new</span> A);</div><div class="line"><span class="comment">//以上会输出 1  1</span></div></pre></td></tr></table></figure>
<h4 id="为unserialize-提供过滤"><a href="#为unserialize-提供过滤" class="headerlink" title="为unserialize()提供过滤"></a>为unserialize()提供过滤</h4><blockquote>
<p>这个特性旨在提供更安全的方式解包不可靠的数据。它通过白名单的方式来防止潜在的代码注入。具体见<a href="http://php.net/manual/zh/function.unserialize.php" target="_blank" rel="external">unserialize()</a></p>
</blockquote>
<h4 id="会话选项"><a href="#会话选项" class="headerlink" title="会话选项"></a>会话选项</h4><blockquote>
<p><code>session_start()</code> 可以接受一个 array 作为参数， 用来覆盖 <code>php.ini</code> 文件中设置的 会话配置选项。<br>在调用 <code>session_start()</code> 的时候， 传入的选项参数中也支持 <code>session.lazy_write</code> 行为， 默认情况下这个配置项是打开的。它的作用是控制 PHP 只有在会话中的数据发生变化的时候才 写入会话存储文件，如果会话中的数据没有发生改变，那么 PHP 会在读取完会话数据之后， 立即关闭会话存储文件，不做任何修改，可以通过设置 <code>read_and_close</code> 来实现。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;为什么PHP7比PHP5性能提升了？&quot;&gt;&lt;a href=&quot;#为什么PHP7比PHP5性能提升了？&quot; class=&quot;headerlink&quot; title=&quot;为什么PHP7比PHP5性能提升了？&quot;&gt;&lt;/a&gt;为什么PHP7比PHP5性能提升了？&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
    
    </summary>
    
    
      <category term="php work" scheme="http://www.wangwenfan.com/tags/php-work/"/>
    
  </entry>
  
  <entry>
    <title>javascript 分片上传文件demo</title>
    <link href="http://www.wangwenfan.com/posts/uncategorized/2017-09-27-javascript-%E5%88%86%E7%89%87%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6demo.html"/>
    <id>http://www.wangwenfan.com/posts/uncategorized/2017-09-27-javascript-分片上传文件demo.html</id>
    <published>2017-09-27T10:01:26.000Z</published>
    <updated>2017-09-27T10:02:29.931Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>文件上传是一个使用频率非常高的一个功能。但是项目中总觉得它不够完善。从而暴露出一些细节问题。于是动手写一个分片上传的demo分享出来供大家参考。</p>
</blockquote>
<p><img src="https://ws1.sinaimg.cn/large/98e19e2dgy1fjy8q0y79xg20i506pwkg.gif" alt=""></p>
<h4 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h4><ul>
<li><code>JavaScript</code>有个<code>slice</code>函数可以截取文件指定片段大小,然后把文件写入<code>FormData</code>，与普通的 <code>Ajax</code> 相比，使用 <code>FormData</code> 的最大优点就是我们可以异步上传二进制文件。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$.ajax(&#123;</div><div class="line">    <span class="attr">url</span>: <span class="string">'/upload'</span>,</div><div class="line">    <span class="attr">type</span>: <span class="string">'POST'</span>,</div><div class="line">    <span class="attr">cache</span>: <span class="literal">false</span>,</div><div class="line">    <span class="attr">data</span>: FormData, </div><div class="line">    <span class="attr">processData</span>: <span class="literal">false</span>,</div><div class="line">    <span class="attr">contentType</span>: <span class="literal">false</span> </div><div class="line">&#125;).done(<span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</div><div class="line">&#125;).fail(<span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;&#125;);</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p><code>processData</code>设置为false。因为<code>data</code>值是<code>FormData</code>对象，不需要对数据做处理。<br><code>contentType</code>设置为<code>false</code>。因为是由<code>&lt;form&gt;</code>表单构造的<code>FormData</code>对象，且已经声明了属性<code>enctype=&quot;multipart/form-data&quot;</code>，所以这里设置为<code>false</code>。</p>
</blockquote>
<ul>
<li>上传过程中把分片信息存储到<code>LocalStorage</code>。还有一种方式是，上传时到服务器去看有没有这个文件，再取回大小。根据这个大小找到当前未上传完的文件的起始位置。当前demo主要用第一种方式实现。</li>
<li>服务端用<code>PHP</code>来实现。php的<code>file_put_contents()</code>函数可以追加写入文件。第一个参数为写入路径，第二个为文件，第三个参数<code>FILE_APPEND</code>可以追加写入。具体使用查看：<a href="http://php.net/manual/zh/function.file-put-contents.php" target="_blank" rel="external">http://php.net/manual/zh/function.file-put-contents.php</a></li>
</ul>
<h4 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">|-breakpoint</div><div class="line">|_____static</div><div class="line">|      |___common.js 上传逻辑</div><div class="line">|      |__style.css 模板基本样式</div><div class="line">|_____upload 附件目录</div><div class="line">|</div><div class="line">|_____demo.html 模板</div><div class="line">|</div><div class="line">|_____fileTest.php 服务端文件</div></pre></td></tr></table></figure>
<h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><ul>
<li>下载或clone下来，访问<code>/demo.html</code>即可。</li>
<li>初始化，commo.js里已有。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//初始化</span></div><div class="line">UP.__init(&#123;</div><div class="line">    <span class="attr">myFile</span>: <span class="string">"#myFile"</span>, <span class="comment">//fileinput节点</span></div><div class="line">    ServerUrl:<span class="string">"/fileTest.php"</span>,<span class="comment">//服务器地址</span></div><div class="line">    eachSize:<span class="number">1024</span> <span class="comment">//分片大小</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h4><p><a href="https://github.com/wangwenfan/breakpoint" target="_blank" rel="external">https://github.com/wangwenfan/breakpoint</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;文件上传是一个使用频率非常高的一个功能。但是项目中总觉得它不够完善。从而暴露出一些细节问题。于是动手写一个分片上传的demo分享出来供大家参考。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.
    
    </summary>
    
    
      <category term="php javascript work" scheme="http://www.wangwenfan.com/tags/php-javascript-work/"/>
    
  </entry>
  
  <entry>
    <title>用WebUpload实现简单文件上传功能</title>
    <link href="http://www.wangwenfan.com/posts/uncategorized/2017-09-06-%E7%94%A8WebUpload%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%8A%9F%E8%83%BD.html"/>
    <id>http://www.wangwenfan.com/posts/uncategorized/2017-09-06-用WebUpload实现简单文件上传功能.html</id>
    <published>2017-09-06T09:23:44.000Z</published>
    <updated>2017-09-06T09:26:16.338Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>这个图片上传工具可以配置成全局使用，包括单图上传、多图上传、视频上传、音频上传、编辑器图片视频上传、音频上传带播放功能。带附件历史记录功能。编辑器使用百度Ueditor开发。移动端上传为Weui改造。<img src="https://ws1.sinaimg.cn/large/98e19e2dgy1fj9xjkj8sjg20sy0hn7wh.gif" alt="示例图片">)</p>
</blockquote>
<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><blockquote>
<p>一种为Thinkphp3.2集成，直接可以使用（需配置在项一级目录，二级目录会报错）。另一种为纯前端使用的jsdk。</p>
<h4 id="1-PHP使用方法"><a href="#1-PHP使用方法" class="headerlink" title="1.PHP使用方法"></a>1.PHP使用方法</h4><ul>
<li>pc端访问 <code>yourpath/home/index/index</code></li>
<li>移动端访问 <code>yourpath/home/index/mobileindex</code><h5 id="项目配置文件"><a href="#项目配置文件" class="headerlink" title="项目配置文件"></a>项目配置文件</h5></li>
<li>修改 <code>/resource/js/app/config.js</code></li>
<li>修改 <code>/Application/Common/config.php</code><h5 id="核心文件"><a href="#核心文件" class="headerlink" title="核心文件"></a>核心文件</h5></li>
<li>新增了 <code>/ThinkPHP/Library/Org/Util/UploadFile.class.php</code></li>
<li>修改了 <code>/ThinkPHP/Think/Upload/Driver/Qiniu.class.php</code></li>
</ul>
</blockquote>
<h5 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h5><ul>
<li>附件表，可按需修改<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE `attachment` (</div><div class="line">  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT &apos;自增ID&apos;,</div><div class="line">  `file_type` enum(&apos;1&apos;,&apos;2&apos;,&apos;3&apos;,&apos;4&apos;) NOT NULL COMMENT &apos;附件类型1图片2音频3视频4其他&apos;,</div><div class="line">  `file_name` varchar(100) NOT NULL COMMENT &apos;附件名&apos;,</div><div class="line">  `file_url` varchar(200) NOT NULL COMMENT &apos;附件地址&apos;,</div><div class="line">  `is_cdn` tinyint(1) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;是否在cdn，1是0否&apos;,</div><div class="line">  `file_size` int(11) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;附件大小&apos;,</div><div class="line">  `year` smallint(6) NOT NULL COMMENT &apos;上传年份&apos;,</div><div class="line">  `month` tinyint(2) NOT NULL COMMENT &apos;上传月份&apos;,</div><div class="line">  `create_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT &apos;上传时间&apos;,</div><div class="line">  PRIMARY KEY (`id`),</div><div class="line">  KEY `year` (`year`) USING BTREE,</div><div class="line">  KEY `month` (`month`) USING BTREE</div><div class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="图片上传函数参数"><a href="#图片上传函数参数" class="headerlink" title="图片上传函数参数"></a>图片上传函数参数</h5><ul>
<li>$name 表单字段的名称，同一页面不能为空</li>
<li>$value 表单input值</li>
<li>$default 默认显示的缩略图</li>
<li><p>$options 图片上传配置信息</p>
</li>
<li><p>单图上传</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tpl_form_field_image($name, $value = ‘’, $default = ‘’, $options = array())</div></pre></td></tr></table></figure>
</li>
<li><p>多图上传</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tpl_form_field_multi_audio($name, $value = array(), $options = array())</div></pre></td></tr></table></figure>
</li>
</ul>
<p>音频上传、视频上传类似，具体参考<code>/Application/Common/Common/function.php</code></p>
<h4 id="2-JSDK使用方法"><a href="#2-JSDK使用方法" class="headerlink" title="2. JSDK使用方法"></a>2. JSDK使用方法</h4><ul>
<li>jsdk访问地址 <code>yourpath/webTest/index.html</code> </li>
<li>只需要把里面的webTest目录文件取出来就行。</li>
<li><p>修改配置<code>webTest/assets/js/EasyUpload.js</code>,如下所示：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">//项目url地址</div><div class="line">var app_path = &apos;http://xxx&apos;;</div><div class="line">//定义路由</div><div class="line">var appConfigPath = &#123;</div><div class="line">    //上传地址</div><div class="line">    uploadPath:app_path+&quot;index.php/home/index/upload&quot;,</div><div class="line">    //历史图片</div><div class="line">    imgList:app_path+&quot;index.php/home/index/imageList&quot;,</div><div class="line">    //展示远程图片地址</div><div class="line">    fetchImage:app_path+&quot;index.php/home/index/fetch&quot;,</div><div class="line">    //历史视频</div><div class="line">    vedioList:app_path+&quot;index.php/home/index/videoList&quot;,</div><div class="line">    //历史音频</div><div class="line">    audioList:app_path+&quot;index.php/home/index/audioList&quot;,</div><div class="line">    deleteFile:app_path+&quot;index.php/home/index/deleteFile&quot;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
</li>
<li><p>调用方式，参照<code>webTest/index.html</code>引入css和js文件，再调用需要上传的方法，方法里的参数有 domName 节点名、defaultValue 默认值、options 配置 。具体参数使用方式查看<code>webTest/assets/js/EasyUpload.js</code> 如下所示：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">   $(function () &#123;</div><div class="line">       //图片上传</div><div class="line">       EasyUpload.loadFiledImage(&quot;#filedImage&quot;);</div><div class="line">       //编辑器</div><div class="line">       EasyUpload.loadUeditor(&quot;#content&quot;);</div><div class="line">       //音频上传</div><div class="line">       EasyUpload.loadAudio(&apos;#audios&apos;);</div><div class="line">       //视频上传</div><div class="line">       EasyUpload.loadVideo(&apos;#movies&apos;);</div><div class="line">   &#125;);</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>文件上传返回格式：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">&quot;ext&quot;: &quot;gif&quot;,</div><div class="line">&quot;name&quot;: &quot;jdfw.gif&quot;,</div><div class="line">&quot;attachment&quot;: &quot;/Uploads/image/2017-09-06/59afb44c54ef4.gif&quot;,</div><div class="line">&quot;filename&quot;: &quot;/Uploads/image/2017-09-06/59afb44c54ef4.gif&quot;,</div><div class="line">&quot;url&quot;: &quot;http://10.10.12.232:99/Uploads/image/2017-09-06/59afb44c54ef4.gif&quot;,</div><div class="line">&quot;is_image&quot;: 1,</div><div class="line">&quot;filesize&quot;: 1280038,</div><div class="line">&quot;height&quot;: 80,</div><div class="line">&quot;widch&quot;: 80</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>历史记录返回格式(items的key为id的值)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">&quot;message&quot;: &#123;</div><div class="line">&quot;message&quot;: &#123;</div><div class="line">&quot;items&quot;: &#123;</div><div class="line">&quot;1&quot;: &#123;</div><div class="line">&quot;id&quot;: &quot;1&quot;,</div><div class="line">&quot;filename&quot;: &quot;cms结构_v1.png&quot;,</div><div class="line">&quot;attachment&quot;: &quot;/Uploads/image/2017-09-06/59afb1fbeeaf1.png&quot;,</div><div class="line">&quot;url&quot;: &quot;/Uploads/image/2017-09-06/59afb1fbeeaf1.png&quot;,</div><div class="line">&quot;type&quot;: &quot;1&quot;,</div><div class="line">&quot;createtime&quot;: &quot;2017-09-06&quot;</div><div class="line">&#125;</div><div class="line">&#125;,</div><div class="line">&quot;page&quot;: &quot;&quot;</div><div class="line">&#125;,</div><div class="line">&quot;error&quot;: 0</div><div class="line">&#125;,</div><div class="line">&quot;redirect&quot;: &quot;&quot;,</div><div class="line">&quot;type&quot;: &quot;ajax&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h4><p><a href="https://github.com/wangwenfan/EasyUpload" target="_blank" rel="external">https://github.com/wangwenfan/EasyUpload</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这个图片上传工具可以配置成全局使用，包括单图上传、多图上传、视频上传、音频上传、编辑器图片视频上传、音频上传带播放功能。带附件历史记录功能。编辑器使用百度Ueditor开发。移动端上传为Weui改造。&lt;img src=&quot;https://ws1.si
    
    </summary>
    
    
      <category term="work web php" scheme="http://www.wangwenfan.com/tags/work-web-php/"/>
    
  </entry>
  
  <entry>
    <title>PHP观察者模式</title>
    <link href="http://www.wangwenfan.com/posts/uncategorized/2017-07-21-PHP%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F.html"/>
    <id>http://www.wangwenfan.com/posts/uncategorized/2017-07-21-PHP观察者模式.html</id>
    <published>2017-07-21T08:36:13.000Z</published>
    <updated>2017-07-21T08:36:56.335Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>观察者模式(Observer),当一个对象的状态发生改变时，依赖他的对象会全部收到通知，并自动更新。一个事件发生后,要执行一连串更新操作.传统的编程方式,就是在事件的代码之后直接加入处理逻辑,当更新得逻辑增多之后,代码会变得难以维护.这种方式是耦合的,侵入式的,增加新的逻辑需要改变事件主题的代码观察者模式实现了低耦合,非侵入式的通知与更新机制。</p>
</blockquote>
<h3 id="1-传统的使用方式"><a href="#1-传统的使用方式" class="headerlink" title="1. 传统的使用方式"></a>1. 传统的使用方式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">class Order</div><div class="line">&#123;</div><div class="line">    // 订单状态</div><div class="line">    private $state = 0;</div><div class="line"></div><div class="line">    // 订单状态有变化时发送通知</div><div class="line">    public function addOrder()</div><div class="line">    &#123;</div><div class="line">        $this-&gt;state = 1;</div><div class="line">        // 发送邮件</div><div class="line">        Email::update($this-&gt;state);</div><div class="line">        // 短信通知</div><div class="line">        Message::update($this-&gt;state);</div><div class="line">        // 记录日志</div><div class="line">        Log::update();</div><div class="line">        // 其他更多通知</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">$order = new Order();</div><div class="line">$order-&gt;addOrder();</div></pre></td></tr></table></figure>
<ul>
<li>就会同时产生三个通知：发送邮件、发送短信和记录日志。在系统小的时候，这是非常快捷有效的方式。可是，当系统变大的时候，这种方法马上面临难以扩展的问题，并且容易出错。</li>
<li>如果订单不需要某种通知，比如不需要记录日志，则必须修改Order类，做状态的判断；</li>
<li>如果再加一种通知方式，如系统消息通知，则除了增加新类，同时还需要修改Order类和客户端。</li>
<li>这两条都不符合面向对象中的开闭原则，会让系统越来越难维护。</li>
</ul>
<h3 id="2-使用观察者模式来实现这个功能"><a href="#2-使用观察者模式来实现这个功能" class="headerlink" title="2. 使用观察者模式来实现这个功能"></a>2. 使用观察者模式来实现这个功能</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">/**</div><div class="line"> * 被观察者接口</div><div class="line"> */</div><div class="line">interface Observable</div><div class="line">&#123;</div><div class="line">    // 添加/注册观察者</div><div class="line">    public function attach(Observer $observer);</div><div class="line">    // 删除观察者</div><div class="line">    public function detach(Observer $observer);</div><div class="line">    // 触发通知</div><div class="line">    public function notify();</div><div class="line">&#125;</div><div class="line"></div><div class="line">/**</div><div class="line"> * 观察者接口</div><div class="line"> */</div><div class="line">interface Observer</div><div class="line">&#123;</div><div class="line">    //收到通知处理方法</div><div class="line">    public function update(Observable $observable);</div><div class="line">&#125;</div><div class="line"></div><div class="line">/**</div><div class="line"> * 被观察者</div><div class="line"> * 职责：添加观察者到$observers属性中，</div><div class="line"> * 有变动时通过notify()方法运行通知</div><div class="line"> */</div><div class="line">class Order implements Observable</div><div class="line">&#123;</div><div class="line">    // 保存观察者</div><div class="line">    private $observers = array();</div><div class="line">    // 订单状态</div><div class="line">    private $state = 0;</div><div class="line"></div><div class="line">    // 添加（注册）观察者</div><div class="line">    public function attach(Observer $observer)</div><div class="line">    &#123;</div><div class="line">        $key = array_search($observer, $this-&gt;observers);</div><div class="line">        if ($key === false) &#123;</div><div class="line">            $this-&gt;observers[] = $observer;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    // 移除观察者</div><div class="line">    public function detach(Observer $observer)</div><div class="line">    &#123;</div><div class="line">        $key = array_search($observer, $this-&gt;observers);</div><div class="line">        if ($key !== false) &#123;</div><div class="line">            unset($this-&gt;observers[$key]);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    // 遍历调用观察者的update()方法进行通知，不关心其具体实现方式</div><div class="line">    public function notify()</div><div class="line">    &#123;</div><div class="line">        foreach ($this-&gt;observers as $observer) &#123;</div><div class="line">            // 把本类对象传给观察者，以便观察者获取当前类对象的信息</div><div class="line">            $observer-&gt;update($this);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    // 订单状态有变化时发送通知</div><div class="line">    public function addOrder()</div><div class="line">    &#123;</div><div class="line">        $this-&gt;state = 1;</div><div class="line">        $this-&gt;notify();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    // 获取提供给观察者的状态</div><div class="line">    public function getState()</div><div class="line">    &#123;</div><div class="line">        return $this-&gt;state;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">/**</div><div class="line"> * 观察者发送邮件</div><div class="line"> */</div><div class="line">class Email implements Observer</div><div class="line">&#123;</div><div class="line">    public function update(Observable $observable)</div><div class="line">    &#123;</div><div class="line">        $state = $observable-&gt;getState();</div><div class="line">        if($state)&#123;</div><div class="line">            echo &quot;发送邮件：您已成功下单&lt;br&gt;&quot;;</div><div class="line">        &#125;else&#123;</div><div class="line">            echo &quot;发送邮件：错误;下单失败&lt;br&gt;&quot;;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/**</div><div class="line"> * 观察者发送短信</div><div class="line"> */</div><div class="line">class Message implements Observer</div><div class="line">&#123;</div><div class="line">    public function update(Observable $observable)</div><div class="line">    &#123;</div><div class="line">        $state = $observable-&gt;getState();</div><div class="line">        if($state)&#123;</div><div class="line">            echo &quot;发送短信：你已下单成功&lt;br&gt;&quot;;</div><div class="line">        &#125;else&#123;</div><div class="line">            echo &quot;发送短信：错误；下单失败&lt;br&gt;&quot;;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/**</div><div class="line"> * 客户端使用</div><div class="line"> */</div><div class="line">$email = new Email;</div><div class="line">$message = new Message;</div><div class="line">//创建订单</div><div class="line">$order = new Order;</div><div class="line">$order-&gt;attach($email);</div><div class="line">$order-&gt;attach($message);</div><div class="line">$order-&gt;addOrder();</div><div class="line">// 删除记录日志观察者</div><div class="line">$order-&gt;detach($email);</div><div class="line">$order-&gt;detach($message);</div></pre></td></tr></table></figure>
<ul>
<li>如果我需要新增一个观察者，只需要添加观察者本身的类，再实现update方法。<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * 观察者：系统消息</div><div class="line"> */</div><div class="line">class Alert implements Observer</div><div class="line">&#123;</div><div class="line">    public function update(Observable $observable)</div><div class="line">    &#123;</div><div class="line">        echo &apos;系统消息：您的订单有更新了~~~&apos;;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">// 创建“系统消息”观察者</div><div class="line">$alert = new Alert();</div><div class="line">// 注册观察者到订单对象中</div><div class="line">$order-&gt;attach($alert);</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h3><ul>
<li><p>在观察者模式中，被观察者完全不需要关心观察者，在自身状态有变化是，遍历执行观察者update()方法即完成通知。</p>
</li>
<li><p>在观察者模式中，被观察者通过添加attach()方法，提供给观察者注册，使自己变得可见。</p>
</li>
<li><p>当被观察者改变时，给注册的观察者发送通知。至于观察者如何处理通知，被观察者不需要关心。</p>
</li>
<li><p>这是一种良好的设计，对象之间不必相互理解，同样能够相互通信。</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;观察者模式(Observer),当一个对象的状态发生改变时，依赖他的对象会全部收到通知，并自动更新。一个事件发生后,要执行一连串更新操作.传统的编程方式,就是在事件的代码之后直接加入处理逻辑,当更新得逻辑增多之后,代码会变得难以维护.这种方式是耦合
    
    </summary>
    
    
      <category term="work php 设计模式" scheme="http://www.wangwenfan.com/tags/work-php-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>自己写PHP框架需要哪些知识</title>
    <link href="http://www.wangwenfan.com/posts/uncategorized/2017-07-17-%E8%87%AA%E5%B7%B1%E5%86%99PHP%E6%A1%86%E6%9E%B6%E9%9C%80%E8%A6%81%E5%93%AA%E4%BA%9B%E7%9F%A5%E8%AF%86.html"/>
    <id>http://www.wangwenfan.com/posts/uncategorized/2017-07-17-自己写PHP框架需要哪些知识.html</id>
    <published>2017-07-17T05:49:19.000Z</published>
    <updated>2017-07-17T05:50:06.696Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>原文链接：<a href="https://www.zhihu.com/question/26635323/answer/33812516" target="_blank" rel="external">https://www.zhihu.com/question/26635323/answer/33812516</a></li>
</ul>
<blockquote>
<p>很多人当听到别人要开发框架的时候第一想法就是，又重复造轮子。<br>其实造轮子的过程是一个快速积累知识的过程，能较快的发现自己的不足，以及学到一些自己未发现的知识点。所以建议在有一定PHP基础的情况下，都去尝试完成一个五脏俱全的基本框架吧。</p>
</blockquote>
<h4 id="那么下面分享一下我之前造轮子的过程吧："><a href="#那么下面分享一下我之前造轮子的过程吧：" class="headerlink" title="那么下面分享一下我之前造轮子的过程吧："></a>那么下面分享一下我之前造轮子的过程吧：</h4><ol>
<li>尝试试用一个以上的框架，看完一遍使用文档，目的在于了解它都有哪些功能，发现他的一些比较好的用法设计；</li>
<li>在看文档的同时并行的思考这一部分的实现原理，如果想不明白则记下来或者上Github去看源码（当然在不熟悉代码结构的情况下可能很难找，所以我建议还是先记下来）；</li>
<li>看它的项目结构，同时思考这个结构的意义，比如现在大部分框架都把入口文件与静态资源单独放到public目录里与其它目录分开的原因是什么；</li>
<li>尝试看一遍源码的运行流程，从入口到输出，以及错误处理，模板引擎，配置等多个点了解一下（如果基础允许的话，在这过程中解决上面记下来的疑点吧）；</li>
<li>开始自己实现吧，先写一个大概的功能列表，把你要实现的点写出来；</li>
<li>然后思考如果组织代码结构，在没有太多实践经验的情况下就按你最熟悉的方式组织吧（先实现再优化）；</li>
<li>先跑通基本的hello world!；</li>
<li>一点点加功能吧；</li>
<li>发现不足，改进它；</li>
</ol>
<blockquote>
<p>这里在加功能的时候，尽量自己实现所有的能实现的组件，比如文件上传，错误处理等等，毕竟目的是实习知识。<br>那么这过程其实走下来对于基础稍差的人来说可能会特别不顺利，那么没关系，遇到哪一个点卡住，先解决你对这个点的问题，快速补充知识再回来继续。</p>
</blockquote>
<h4 id="总结一些在造框架过程中通常会用到的一些点吧（以下排列没有先后顺序）："><a href="#总结一些在造框架过程中通常会用到的一些点吧（以下排列没有先后顺序）：" class="headerlink" title="总结一些在造框架过程中通常会用到的一些点吧（以下排列没有先后顺序）："></a>总结一些在造框架过程中通常会用到的一些点吧（以下排列没有先后顺序）：</h4><ol>
<li>MVC</li>
<li>自动加载: PHP: 自动加载类;</li>
<li>错误处理：<a href="http://php.net/manual/zh/book.errorfunc.php" target="_blank" rel="external">http://php.net/manual/zh/book.errorfunc.php</a>;</li>
<li>PHP标准库 (SPL)PHP: SPL - Manual;</li>
<li>输出缓冲控制: PHP: 输出控制;</li>
<li>PHP 选项/信息：PHP 选项/信息;</li>
<li>数据库抽象层：PHP: 数据库抽象层;</li>
<li>session拓展：PHP: Session 扩展;</li>
<li>反射：<a href="http://php.net/manual/zh/book.reflection.php" target="_blank" rel="external">http://php.net/manual/zh/book.reflection.php</a>;</li>
<li>类和对象：PHP: 类/对象;</li>
<li>图像处理和 GD：PHP: GD - Manual;</li>
<li>邮件相关的SMTP;</li>
<li>文件系统：PHP: Filesystem;</li>
<li>预定义变量：PHP: 预定义变量;</li>
<li>字符串处理：PHP: 字符串 - Manual;</li>
<li>正则表达式: <a href="http://php.net/manual/en/book.pcre.php" target="_blank" rel="external">http://php.net/manual/en/book.pcre.php</a>;</li>
</ol>
<blockquote>
<p>基本的可能上面这些也足够了，虽然上面给的每一个链接都有很多内容，但是掌握常用的就好，可以结合搜索引擎去了解。如果你想给框架加一些更巧妙的，或者更丰富的功能的话，这里还有一些知识点：</p>
</blockquote>
<ol>
<li>常见的设计模式：工厂、单例，外观、观察者等;</li>
<li>迭代器等预定义接口：PHP: 预定义接口；</li>
<li>数据库拓展：PHP: 数据库扩展;</li>
<li>国际化与字符编码支持 PHP: 国际化与字符编码支持;</li>
<li>常用的缓存，Redis, Memcache,Apc等;</li>
<li>队列服务如ActiveMQ,Beanstalkd等;</li>
<li>多数据库支持如Mongo；</li>
<li>事件与钩子；</li>
</ol>
<blockquote>
<p>另外还有一种创建框架的方式，不过这里用“创建”已经不太合适了，叫组合框架吧，那就是使用Composer基于开源组件拼装一个属于自己的框架。当然这里不建议新手这么干，这可能会让你在很多基础的东西上得不到锻炼。如果个人技术能力已经比较成熟了，目的在于快速开发项目的时候，用它绝对是利器。</p>
</blockquote>
<h4 id="最后推荐一些参考框架："><a href="#最后推荐一些参考框架：" class="headerlink" title="最后推荐一些参考框架："></a>最后推荐一些参考框架：</h4><ol>
<li>Slim Framework  - 微框架，一个框架基本功能都满足了，很适合用于学习；</li>
<li>Silex - 微框架，基于Symfony2组件；</li>
<li>CodeIgniter  - 结构很清晰的PHP框架；</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;原文链接：&lt;a href=&quot;https://www.zhihu.com/question/26635323/answer/33812516&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.zhihu.com/questio
    
    </summary>
    
    
      <category term="work php" scheme="http://www.wangwenfan.com/tags/work-php/"/>
    
  </entry>
  
  <entry>
    <title>javaScript总结</title>
    <link href="http://www.wangwenfan.com/posts/uncategorized/2017-07-12-javaScript%E6%80%BB%E7%BB%93.html"/>
    <id>http://www.wangwenfan.com/posts/uncategorized/2017-07-12-javaScript总结.html</id>
    <published>2017-07-12T08:35:21.000Z</published>
    <updated>2017-07-12T08:36:14.781Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><a href="#%E5%BE%AE%E5%8D%9A%E6%89%B9%E9%87%8F%E5%8F%96%E6%B6%88%E5%85%B3%E6%B3%A8">微博批量取消关注：</a></li>
<li><a href="#%E8%8E%B7%E5%8F%96radio%E7%9A%84%E9%80%89%E4%B8%AD%E5%80%BC">获取radio的选中值</a></li>
<li><a href="#json%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%87%BD%E6%95%B0">json格式化函数</a></li>
<li><a href="#%E6%89%93%E5%BC%80%E6%96%B0%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0">打开新窗口函数：</a></li>
<li><a href="#%E5%88%B7%E6%96%B0%E5%9B%9E%E5%88%B0%E6%BB%9A%E5%8A%A8%E6%9D%A1%E4%BD%8D%E7%BD%AE">刷新回到滚动条位置</a></li>
<li><a href="#ajax-async%E5%8F%82%E6%95%B0">Ajax async参数</a></li>
<li><a href="#ajax%E5%BC%82%E6%AD%A5%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6">ajax异步上传文件</a></li>
<li><a href="#javascript%E5%AE%9E%E7%8E%B0img%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E5%A4%B1%E8%B4%A5%E5%90%8E%E6%98%BE%E7%A4%BA%E9%BB%98%E8%AE%A4%E5%9B%BE%E7%89%87">javaScript实现img图片加载失败后显示默认图片</a></li>
<li><a href="#ajax%E8%AF%B7%E6%B1%82%E5%8A%A0%E8%BD%BD%E7%8A%B6%E6%80%81">ajax请求加载状态</a></li>
<li><a href="#javascript-cookie%E5%AF%B9%E8%B1%A1%E5%B0%81%E8%A3%85">javaScript cookie对象封装</a></li>
<li><a href="#ajax%E8%AF%B7%E6%B1%82%E5%AF%B9%E8%B1%A1%E5%B0%81%E8%A3%85">Ajax请求对象封装</a></li>
<li><a href="#javascript-localstorage-%E5%B0%81%E8%A3%85">javascript LocalStorage 封装</a></li>
</ul>
<h3 id="微博批量取消关注："><a href="#微博批量取消关注：" class="headerlink" title="微博批量取消关注："></a>微博批量取消关注：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$(&quot;.btn_link.S_txt1&quot;).click(); // 进入“批量管理”</div><div class="line">// 选中全部</div><div class="line">var lis = $(&quot;.member_li.S_bg1&quot;).parentNode.childNodes;</div><div class="line">for(var i=0;i&lt;lis.length;i++)&#123;</div><div class="line">    lis[i].className = &quot;member_li S_bg1 choosed S_link1_br&quot;;</div><div class="line">&#125;</div><div class="line">// 为了让“取消关注”可点击</div><div class="line">$(&quot;.member_li.S_bg1&quot;).click();</div><div class="line">$(&quot;.member_li.S_bg1&quot;).click();</div><div class="line">$(&quot;.W_btn_a[node-type=&apos;cancelFollowBtn&apos;]&quot;).click(); // 取消关注</div><div class="line">$(&quot;.W_btn_a.btn_34px[node-type=&apos;ok&apos;]&quot;).click(); // 确定</div></pre></td></tr></table></figure>
<h3 id="获取radio的选中值"><a href="#获取radio的选中值" class="headerlink" title="获取radio的选中值"></a>获取radio的选中值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">function getValue(name)&#123;</div><div class="line">    // method 1</div><div class="line">    var radio = document.getElementsByName(name);</div><div class="line">    for (i=0; i&lt;radio.length; i++) &#123;</div><div class="line">        if (radio[i].checked) &#123;</div><div class="line">            return radio[i].value;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="json格式化函数"><a href="#json格式化函数" class="headerlink" title="json格式化函数"></a>json格式化函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">&lt;style&gt;</div><div class="line">    pre &#123;outline: 1px solid #ccc; padding: 5px; margin: 5px; &#125;</div><div class="line">    .string &#123; color: green; &#125;</div><div class="line">    .number &#123; color: darkorange; &#125;</div><div class="line">    .boolean &#123; color: blue; &#125;</div><div class="line">    .null &#123; color: magenta; &#125;</div><div class="line">    .key &#123; color: red; &#125;</div><div class="line">&lt;/style&gt;</div><div class="line"></div><div class="line">function syntaxHighlight(json) &#123;</div><div class="line">    if (typeof json != &apos;string&apos;) &#123;</div><div class="line">        json = JSON.stringify(json, undefined, 2);</div><div class="line">    &#125;</div><div class="line">    json = json.replace(/&amp;/g, &apos;&amp;&apos;).replace(/&lt;/g, &apos;&lt;&apos;).replace(/&gt;/g, &apos;&gt;&apos;);</div><div class="line">    return json.replace(/(&quot;(\\u[a-zA-Z0-9]&#123;4&#125;|\\[^u]|[^\\&quot;])*&quot;(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g, function(match) &#123;</div><div class="line">        var cls = &apos;number&apos;;</div><div class="line">        if (/^&quot;/.test(match)) &#123;</div><div class="line">            if (/:$/.test(match)) &#123;</div><div class="line">                cls = &apos;key&apos;;</div><div class="line">            &#125; else &#123;</div><div class="line">                cls = &apos;string&apos;;</div><div class="line">            &#125;</div><div class="line">        &#125; else if (/true|false/.test(match)) &#123;</div><div class="line">            cls = &apos;boolean&apos;;</div><div class="line">        &#125; else if (/null/.test(match)) &#123;</div><div class="line">            cls = &apos;null&apos;;</div><div class="line">        &#125;</div><div class="line">        return &apos;&lt;span class=&quot;&apos; + cls + &apos;&quot;&gt;&apos; + match + &apos;&lt;/span&gt;&apos;;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="打开新窗口函数："><a href="#打开新窗口函数：" class="headerlink" title="打开新窗口函数："></a>打开新窗口函数：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">function openwinx(url,name,w,h) &#123;</div><div class="line">   if(!w) w=screen.width-4;</div><div class="line">   if(!h) h=screen.height-95;</div><div class="line">   url = url+&apos;&amp;pc_hash=&apos;+pc_hash;</div><div class="line">    window.open(url,name,&quot;top=100,left=400,width=&quot; + w + &quot;,height=&quot; + h + &quot;,toolbar=no,menubar=no,scrollbars=yes,resizable=yes,location=no,status=no&quot;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="刷新回到滚动条位置"><a href="#刷新回到滚动条位置" class="headerlink" title="刷新回到滚动条位置"></a>刷新回到滚动条位置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">window.onbeforeunload = function () &#123;</div><div class="line">    var scrollPos;</div><div class="line">    if (typeof window.pageYOffset != &apos;undefined&apos;) &#123;</div><div class="line">        scrollPos = window.pageYOffset;</div><div class="line">    &#125;</div><div class="line">    else if (typeof document.compatMode != &apos;undefined&apos; &amp;&amp; document.compatMode != &apos;BackCompat&apos;) &#123;</div><div class="line">        scrollPos = document.documentElement.scrollTop;</div><div class="line">    &#125;</div><div class="line">    else if (typeof document.body != &apos;undefined&apos;) &#123;</div><div class="line">        scrollPos = document.body.scrollTop;</div><div class="line">    &#125;</div><div class="line">    document.cookie = &quot;scrollTop=&quot; + scrollPos; //存储滚动条位置到cookies中</div><div class="line">&#125;</div><div class="line"></div><div class="line">window.onload = function () &#123;</div><div class="line">    if (document.cookie.match(/scrollTop=([^;]+)(;|$)/) != null) &#123;</div><div class="line">        var arr = document.cookie.match(/scrollTop=([^;]+)(;|$)/); //cookies中不为空，则读取滚动条位置</div><div class="line">        document.documentElement.scrollTop = parseInt(arr[1]);</div><div class="line">        document.body.scrollTop = parseInt(arr[1]);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Ajax-async参数"><a href="#Ajax-async参数" class="headerlink" title="Ajax async参数"></a>Ajax async参数</h3><ul>
<li>async值默认为true，当值为false时为同步请求可以获取到ajax的返回值。</li>
</ul>
<h3 id="ajax异步上传文件"><a href="#ajax异步上传文件" class="headerlink" title="ajax异步上传文件"></a>ajax异步上传文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">$(&apos;#btn&apos;).click(function () &#123;</div><div class="line">    var userName = document.myForm.userName.value;</div><div class="line">    var img = document.myForm.img.files[0];</div><div class="line"></div><div class="line">    var fm = new FormData();</div><div class="line">    fm.append(&apos;userName&apos;, userName);</div><div class="line">    fm.append(&apos;img&apos;, img);</div><div class="line">    $.ajax(</div><div class="line">        &#123;</div><div class="line">            url: &apos;submitform.php&apos;,</div><div class="line">            type: &apos;POST&apos;,</div><div class="line">            data: fm,</div><div class="line">            contentType: false, //禁止设置请求类型</div><div class="line">            processData: false, //禁止jquery对DAta数据的处理,默认会处理//禁止的原因是,FormData已经帮我们做了处理</div><div class="line">            success: function (result) &#123;</div><div class="line">                //测试是否成功//但需要你后端有返回值</div><div class="line">                alert(result);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    );</div><div class="line">&#125;);</div><div class="line"></div><div class="line">$.ajax(&#123;</div><div class="line">    url: &apos;/upload&apos;,</div><div class="line">    type: &apos;POST&apos;,</div><div class="line">    cache: false,</div><div class="line">    data: new FormData($(&apos;#uploadForm&apos;)[0]),</div><div class="line">    processData: false,</div><div class="line">    contentType: false</div><div class="line">&#125;).done(function(res) &#123;</div><div class="line">&#125;).fail(function(res) &#123;&#125;);</div></pre></td></tr></table></figure>
<h3 id="javaScript实现img图片加载失败后显示默认图片"><a href="#javaScript实现img图片加载失败后显示默认图片" class="headerlink" title="javaScript实现img图片加载失败后显示默认图片"></a>javaScript实现img图片加载失败后显示默认图片</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(&apos;img&apos;).error(function () &#123;</div><div class="line">       $(this).attr(&apos;src&apos;, http+&quot;statics/shuozy/images/nopic.gif&quot;);</div><div class="line">   &#125;);</div></pre></td></tr></table></figure>
<h3 id="ajax请求加载状态"><a href="#ajax请求加载状态" class="headerlink" title="ajax请求加载状态"></a>ajax请求加载状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(document).ajaxStart(function()&#123;</div><div class="line">    //ajax请求开始</div><div class="line">    $(&quot;yourDom&quot;).html(&apos;加载中&apos;).show();</div><div class="line">&#125;).ajaxStop(function()&#123;</div><div class="line">    //ajax请求结束</div><div class="line">    $(&quot;yourDom&quot;).hide();</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="javaScript-cookie对象封装"><a href="#javaScript-cookie对象封装" class="headerlink" title="javaScript cookie对象封装"></a>javaScript cookie对象封装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * JavaScript COOKIE封装</div><div class="line"> * @type &#123;&#123;set: cookie.set, get: cookie.get, remove: cookie.remove, clear: cookie.clear, getCookies: cookie.getCookies&#125;&#125;</div><div class="line"> */</div><div class="line">var cookie=&#123;</div><div class="line">    //获取cookie对象，以对象表示</div><div class="line">    getCookiesObj:function () &#123;</div><div class="line">        var cookies = &#123;&#125;;</div><div class="line">        if (document.cookie) &#123;</div><div class="line">            var objs = document.cookie.split(&apos;; &apos;);</div><div class="line">            for (var i in objs) &#123;</div><div class="line">                var index = objs[i].indexOf(&apos;=&apos;),</div><div class="line">                    name = objs[i].substr(0, index),</div><div class="line">                    value = objs[i].substr(index + 1, objs[i].length);</div><div class="line">                cookies[name] = value;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return cookies;</div><div class="line">    &#125;,</div><div class="line">    //设置cookie</div><div class="line">    set: function (name, value, opts) &#123;</div><div class="line">        //opts maxAge, path, domain, secure</div><div class="line">        if (name &amp;&amp; value) &#123;</div><div class="line">            var cookie = encodeURIComponent(name) + &apos;=&apos; + encodeURIComponent(value);</div><div class="line">            //可选参数</div><div class="line">            if (opts) &#123;</div><div class="line">                if (opts.maxAge) &#123;</div><div class="line">                    cookie += &apos;; max-age=&apos; + opts.maxAge;</div><div class="line">                &#125;</div><div class="line">                if (opts.path) &#123;</div><div class="line">                    cookie += &apos;; path=&apos; + opts.path;</div><div class="line">                &#125;</div><div class="line">                if (opts.domain) &#123;</div><div class="line">                    cookie += &apos;; domain=&apos; + opts.domain;</div><div class="line">                &#125;</div><div class="line">                if (opts.secure) &#123;</div><div class="line">                    cookie += &apos;; secure&apos;;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            document.cookie = cookie;</div><div class="line">            return cookie;</div><div class="line">        &#125; else &#123;</div><div class="line">            return &apos;&apos;;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    //获取cookie</div><div class="line">    get:function (name) &#123;</div><div class="line"></div><div class="line">        return decodeURIComponent(this.getCookiesObj()[name]) || null;</div><div class="line">    &#125;,</div><div class="line">    //清除某个cookie</div><div class="line">    remove:function (name) &#123;</div><div class="line">        if (this.getCookiesObj()[name]) &#123;</div><div class="line">            document.cookie = name + &apos;=; max-age=0&apos;;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    //清除所有cookie</div><div class="line">    clear:function () &#123;</div><div class="line">        var cookies = this.getCookiesObj();</div><div class="line">        for (var key in cookies) &#123;</div><div class="line">            document.cookie = key + &apos;=; max-age=0&apos;;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    //获取所有cookies</div><div class="line">    getCookies:function (name) &#123;</div><div class="line">        return this.getCookiesObj();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Ajax请求对象封装"><a href="#Ajax请求对象封装" class="headerlink" title="Ajax请求对象封装"></a>Ajax请求对象封装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">var App=&#123;</div><div class="line">     /**</div><div class="line">   * ajax请求函数</div><div class="line">   * @param param</div><div class="line">   */</div><div class="line">  getHttp: function (param) &#123;</div><div class="line">      var self = this;</div><div class="line">      var settings = $.extend(&#123;</div><div class="line">          type: &apos;get&apos;,</div><div class="line">          async: true,</div><div class="line">          cache: &apos;false&apos;,</div><div class="line">          dataType: &apos;json&apos;</div><div class="line">      &#125;, param);</div><div class="line">      if (settings.btn) settings.btn.addClass(&apos;disabled&apos;);</div><div class="line">      $.ajax(&#123;</div><div class="line">          type: settings.type,</div><div class="line">          cache: settings.cache,</div><div class="line">          async: settings.async,</div><div class="line">          dataType: settings.dataType,</div><div class="line">          data: settings.data,</div><div class="line">          url: http+settings.url,</div><div class="line">          success: function (data) &#123;</div><div class="line">              if (data.Ret == &apos;0&apos;) &#123;</div><div class="line">                  self[settings.success](data.Data, settings.is_catid);</div><div class="line">              &#125; else &#123;</div><div class="line">                  alert(data.Msg);</div><div class="line">              &#125;</div><div class="line">          &#125;,</div><div class="line">          complete: function (data) &#123;</div><div class="line">              if (settings.btn) &#123;</div><div class="line">                  settings.btn.removeClass(&apos;disabled&apos;);</div><div class="line">              &#125;</div><div class="line">          &#125;,</div><div class="line">          error: function (data) &#123;</div><div class="line">              alert(data.Msg);</div><div class="line">          &#125;</div><div class="line">      &#125;);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="javascript-LocalStorage-封装"><a href="#javascript-LocalStorage-封装" class="headerlink" title="javascript LocalStorage 封装"></a>javascript LocalStorage 封装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line">var Cache = &#123;</div><div class="line">    /**</div><div class="line">     * 保存数据集</div><div class="line">     * @param key</div><div class="line">     * @param val</div><div class="line">     * @returns &#123;boolean&#125;</div><div class="line">     */</div><div class="line">    setLSs:function (key, val) &#123;</div><div class="line">        var self = this;</div><div class="line">            if (!val) return;</div><div class="line">            var obj_str = self.getLS(key);</div><div class="line">            if (obj_str) &#123;</div><div class="line">                var obj_arr = obj_str.split(&quot;,&quot;);</div><div class="line">                if (self.in_array(obj_arr, val)) &#123;</div><div class="line">                    return false;</div><div class="line">                &#125; else &#123;</div><div class="line">                    obj_arr.push(val);</div><div class="line">                    self.setLS(key, obj_arr.join(&quot;,&quot;));</div><div class="line">                &#125;</div><div class="line">            &#125; else &#123;</div><div class="line">                self.setLS(key, val);</div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">    /**</div><div class="line">     * 读取数据集</div><div class="line">     * @param key</div><div class="line">     * @returns &#123;*&#125;</div><div class="line">     */</div><div class="line">    getLSs:function (key) &#123;</div><div class="line">        var obj_str = this.getLS(key);</div><div class="line">        if (obj_str != null) &#123;</div><div class="line">            return obj_str.split(&quot;,&quot;);</div><div class="line">        &#125;</div><div class="line">        return obj_str;</div><div class="line">    &#125;,</div><div class="line">    /**</div><div class="line">     * 判断是否存在数组中</div><div class="line">     * @param arr</div><div class="line">     * @param val</div><div class="line">     * @returns &#123;boolean&#125;</div><div class="line">     */</div><div class="line">    in_array:function (arr, val) &#123;</div><div class="line">        for (var i = 0; i &lt; arr.length; i++) &#123;</div><div class="line">            if (arr[i] == val) &#123;</div><div class="line">                return true;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;,</div><div class="line">    /**</div><div class="line">     * 设置缓存数据</div><div class="line">     * @param key</div><div class="line">     * @param data</div><div class="line">     */</div><div class="line">    setLS:function (key, data) &#123;</div><div class="line">        if (localStorage.getItem(key) != null)</div><div class="line">            localStorage.removeItem(key);</div><div class="line">        localStorage.setItem(key, data);</div><div class="line">    &#125;,</div><div class="line">    /**</div><div class="line">     * 清除缓存数据</div><div class="line">     * @param key</div><div class="line">     */</div><div class="line">    removeLS:function (key) &#123;</div><div class="line">        localStorage.removeItem(key);</div><div class="line">    &#125;,</div><div class="line">    /**</div><div class="line">     * 读取缓存数据</div><div class="line">     * @param key</div><div class="line">     * @returns &#123;null&#125;</div><div class="line">     */</div><div class="line">    getLS:function (key) &#123;</div><div class="line">        var v = localStorage.getItem(key);</div><div class="line">        return v === undefined ? null : v;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%BE%AE%E5%8D%9A%E6%89%B9%E9%87%8F%E5%8F%96%E6%B6%88%E5%85%B3%E6%B3%A8&quot;&gt;微博批量取消关注：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E8%8E%B7%E5%8
    
    </summary>
    
    
      <category term="work javascript" scheme="http://www.wangwenfan.com/tags/work-javascript/"/>
    
  </entry>
  
  <entry>
    <title>PHPCMSv9整合百度Ueditor</title>
    <link href="http://www.wangwenfan.com/posts/uncategorized/2017-06-15-PHPCMSv9%E6%95%B4%E5%90%88%E7%99%BE%E5%BA%A6Ueditor.html"/>
    <id>http://www.wangwenfan.com/posts/uncategorized/2017-06-15-PHPCMSv9整合百度Ueditor.html</id>
    <published>2017-06-15T03:03:46.000Z</published>
    <updated>2017-06-15T03:05:16.577Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>phpcms自带的ckeditor不是很好用，想换一个编辑器，网上看了下，就ueditor各方面功能比较全，支持一般的格式功能、预览、格式刷、远程抓取图片。</p>
</blockquote>
<p><strong>修改后增加的功能</strong></p>
<ul>
<li>可抓取所有的远程图片，例如没有图片后缀的图片url。</li>
<li>本地上传图片和远程抓取图片可添加水印功能。</li>
<li>可配置图片上传到本地或七牛、阿里云等CDN。</li>
<li><p>目录结构</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">-project</div><div class="line">|__caches</div><div class="line">|    |__config  </div><div class="line">|         |__config.json 服务端配置文件</div><div class="line">|——phpcms</div><div class="line">|    |__libs</div><div class="line">|    |   |__classes</div><div class="line">|    |        |__My_form_class.php 覆盖调用编辑器的类</div><div class="line">|    |__modules</div><div class="line">|         |__ueditor 服务端图片上传逻辑文件</div><div class="line">|         |__content</div><div class="line">|              |__fields</div><div class="line">|                   |__editor</div><div class="line">|                        |__form.inc.php 调用字段数据方法(会生成缓存)</div><div class="line">|——static</div><div class="line">|    |__js</div><div class="line">|       |__ueditor 百度ueditor前端资源文件</div></pre></td></tr></table></figure>
</li>
<li><p>使用方法</p>
</li>
</ul>
<ol>
<li>下载文件解压到相对应的目录。</li>
<li>按需修改<code>config.json</code>文件里的服务端配置项。</li>
<li>按需修改<code>/phpcms/modules/ueditor/Uploader.class.php</code> 第108行<code>upload_type</code>变量，用它来判断图片上传到本地还是cdn。我是放在系统配置文件里。如果需要上传到指定的cdn，按需再110行写自己的逻辑。</li>
</ol>
<p><strong>下载地址:</strong><br><a href="https://github.com/wangwenfan/Phpcms_Ueditor" target="_blank" rel="external">https://github.com/wangwenfan/Phpcms_Ueditor</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;phpcms自带的ckeditor不是很好用，想换一个编辑器，网上看了下，就ueditor各方面功能比较全，支持一般的格式功能、预览、格式刷、远程抓取图片。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;修改后增加的功能&lt;/strong
    
    </summary>
    
    
      <category term="phpcms work php" scheme="http://www.wangwenfan.com/tags/phpcms-work-php/"/>
    
  </entry>
  
  <entry>
    <title>yii2框架学习总结(1)</title>
    <link href="http://www.wangwenfan.com/posts/uncategorized/2017-04-14-yii2%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93(1).html"/>
    <id>http://www.wangwenfan.com/posts/uncategorized/2017-04-14-yii2框架学习总结(1).html</id>
    <published>2017-04-14T10:54:39.000Z</published>
    <updated>2017-04-15T02:14:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>这一周工作不是很忙，抽空重新把yii2框架学习了一下。时间不是特别多，应该只掌握了基本部分，记录一下，下次用的时候还可以翻一下。</p>
<blockquote>
<p>1.安装</p>
</blockquote>
<p>使用composer或者下载归档文件都可以，我使用的是composer<br>在文件目录下执行下面两个命令：<br><code>composer require &quot;fxp/composer-asset-plugin:^1.2.0&quot;</code><br><code>composer create-project --prefer-dist yiisoft/yii2-app-basic basic</code><br>第一条命令安装 Composer asset plugin， 它是通过 Composer 管理 bower 和 npm 包所必须的。 第二条命令会将 Yii 安装在名为 basic 的目录中。如果你想使用其它目录名称，你可以选择其他目录名称。</p>
<blockquote>
<p>2.用户登陆</p>
</blockquote>
<p>我是用gii生成了一个admin的模块，使用yii自带的user模型，主要讲下自动登陆和密码生成及验证。</p>
<ul>
<li>新建一个user表，里面有id,username,password,authkey这几个字段。</li>
<li>app\models\User.php里里生成has密码的方法：<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setPassword</span><span class="params">($password)</span></span></div><div class="line"> &#123;</div><div class="line">     \Yii::$app-&gt;getSecurity()-&gt;generatePasswordHash($password);</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>验证密码的方法:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">validatePassword</span><span class="params">($password)</span></span></div><div class="line">    &#123;</div><div class="line">        \Yii::$app-&gt;getSecurity()-&gt;validatePassword($password,<span class="keyword">$this</span>-&gt;password);</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<ul>
<li>记住密码，同样是user.php里面，当判断用户是记住密码登陆执行下面方法,讲生成的字符串更新authkey字段，下次用户登陆就会用cookie和authkey进行验证，判断是否记住了密码。<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">generateAuthKey</span><span class="params">()</span></span></div><div class="line">  &#123;</div><div class="line">     <span class="keyword">$this</span>-&gt;authKey = Yii::$app-&gt;security-&gt;generateRandomString();</div><div class="line">     <span class="keyword">$this</span>-&gt;save();</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>使用behaviors进行ACF简单的权限验证</p>
</blockquote>
<ul>
<li>控制器里面写一个行为behaviors方法代码如下<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">behaviors</span><span class="params">()</span></span></div><div class="line">  &#123;</div><div class="line">      <span class="keyword">return</span> [</div><div class="line">          <span class="string">'access'</span> =&gt; [</div><div class="line">              <span class="string">'class'</span> =&gt; yii\filters\AccessControl::className(), <span class="comment">// 使用核心过滤器Access 对执行动作进行验证</span></div><div class="line">              <span class="string">'denyCallback'</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($rule, $action)</span> </span>&#123; <span class="comment">//认证失败后回调函数</span></div><div class="line">                  <span class="keyword">$this</span>-&gt;goHome();</div><div class="line">              &#125;,</div><div class="line">              <span class="string">'rules'</span> =&gt; [ <span class="comment">// 规则</span></div><div class="line">                  [</div><div class="line">                      <span class="string">'actions'</span> =&gt; [],<span class="comment">//所有方法</span></div><div class="line">                      <span class="string">'allow'</span> =&gt; <span class="keyword">true</span>, <span class="comment">// 只允许认证用户进行访问</span></div><div class="line">                      <span class="string">'roles'</span> =&gt; [<span class="string">'@'</span>], <span class="comment">//?为游客 @为认证用户</span></div><div class="line">                  ],</div><div class="line">              ],</div><div class="line">          ]</div><div class="line">      ];</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这一周工作不是很忙，抽空重新把yii2框架学习了一下。时间不是特别多，应该只掌握了基本部分，记录一下，下次用的时候还可以翻一下。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.安装&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用composer或者下载归档文件都可以，我使用的
    
    </summary>
    
    
      <category term="work" scheme="http://www.wangwenfan.com/tags/work/"/>
    
  </entry>
  
  <entry>
    <title>Nginx配置https</title>
    <link href="http://www.wangwenfan.com/posts/uncategorized/2017-02-24-Nginx%E9%85%8D%E7%BD%AEhttps.html"/>
    <id>http://www.wangwenfan.com/posts/uncategorized/2017-02-24-Nginx配置https.html</id>
    <published>2017-02-24T08:44:58.000Z</published>
    <updated>2017-05-27T09:06:11.593Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>前端时间阿里云免费赠送了一个一年的安全证书，不要白不要干脆就把自己网站弄成https，下面说说自己的实现过程。</p>
</blockquote>
<ul>
<li>首先是下载证书，我的是再阿里云里面，如果购买成功了，直接下载证书。里面会有两后缀分别为.key和.pem的个文件，如下图所示.</li>
</ul>
<p>下载页面:<br><img src="https://wangwenfan.top/images/_20170224162110.png" alt="下载页面"><br>解压后的文件:<br><img src="https://wangwenfan.top/images/_20170224162324.png" alt="证书文件"></p>
<ul>
<li>阿里云的下载页面会有使用说明。</li>
</ul>
<ol>
<li>先把这两个文件放到你的Nginx目录里的一个新建文件夹中，我是放到nginx/conf/cert/里面在。</li>
<li><p>修改你的nginx.conf，找到你配置的那个虚拟主机修改如下</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen 443;</div><div class="line">    server_name 你的域名;</div><div class="line">    ssl on;</div><div class="line">    root html;</div><div class="line">    index index.html index.htm;</div><div class="line">    ssl_certificate      cert/214006921440734.pem;</div><div class="line">    ssl_certificate_key  cert/214006921440734.key;</div><div class="line">    ssl_session_timeout 5m;</div><div class="line">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</div><div class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</div><div class="line">    ssl_prefer_server_ciphers on;</div><div class="line">    location / &#123;</div><div class="line">        root html;</div><div class="line">        index index.html index.htm;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>使用命令 <code>sudo nginx -t</code> 查看配置是否正确。<br><img src="https://wangwenfan.top/images/_20170224163739.png" alt="nginx -t"></p>
</li>
<li><p>如果一切ok的话,我们重新加载下Nginx，<code>sudo nginx reload</code>就可以使用https访问了，但是Nginx是443端口，浏览器会默认访问80端口，所有我们还要配置下80端口的重定向。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">server</div><div class="line">   &#123;</div><div class="line">        listen 80;</div><div class="line">        server_name 你的域名;</div><div class="line">        rewrite ^(.*) https://$server_name$1 permanent;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>配置好后再重启下Nginx就可以了。</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前端时间阿里云免费赠送了一个一年的安全证书，不要白不要干脆就把自己网站弄成https，下面说说自己的实现过程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;首先是下载证书，我的是再阿里云里面，如果购买成功了，直接下载证书。里面会有两后缀分
    
    </summary>
    
    
      <category term="work" scheme="http://www.wangwenfan.com/tags/work/"/>
    
  </entry>
  
  <entry>
    <title>利用crontab和Shell定时备份数据库和文件</title>
    <link href="http://www.wangwenfan.com/posts/uncategorized/2017-02-22-%E5%88%A9%E7%94%A8crontab%E5%92%8CShell%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8C%E6%96%87%E4%BB%B6.html"/>
    <id>http://www.wangwenfan.com/posts/uncategorized/2017-02-22-利用crontab和Shell定时备份数据库和文件.html</id>
    <published>2017-02-22T10:03:25.000Z</published>
    <updated>2017-05-27T09:06:11.568Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>前两天给客户搭建了一台Linux服务器给做了一个定时备份数据库和网站目录文件夹。下面记录下搭建过程。</p>
</blockquote>
<h5 id="1、整个执行过程主要分两步"><a href="#1、整个执行过程主要分两步" class="headerlink" title="1、整个执行过程主要分两步"></a>1、整个执行过程主要分两步</h5><ul>
<li>编写Shell脚本处理整个过程，包括文件导出、打包、删除等。</li>
<li>用crontab定时执行这个脚本。<h5 id="2、shell脚本编写"><a href="#2、shell脚本编写" class="headerlink" title="2、shell脚本编写"></a>2、shell脚本编写</h5></li>
<li>Shell可以参见 <a href="https://github.com/qinjx/30min_guides/blob/master/shell.md" target="_blank" rel="external">Shell脚本编程30分钟入门</a>。</li>
<li>首先我们写一个导出mysql数据库的脚本，见下面代码。<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment">#备份数据库</span></div><div class="line"><span class="comment">#Author : wangwenfan</span></div><div class="line"><span class="comment">#Date : 2017-02-21</span></div><div class="line"><span class="comment">#配置参数</span></div><div class="line">USER=root <span class="comment">#数据库用户名</span></div><div class="line">PASSWORD=wangwen123 <span class="comment">#数据库用户密码</span></div><div class="line">DATABASE=<span class="built_in">test</span> <span class="comment">#数据库名称</span></div><div class="line">WEBMASTER=787802868@qq.com <span class="comment">#管理员邮箱地址，用以发送备份失败消息提醒</span></div><div class="line">BACKUP_DIR=/home/wangwenfan/topons/ <span class="comment">#备份文件存储路径</span></div><div class="line">LOGFILE=/home/wangwenfan/topons/data_backup.log <span class="comment">#日记文件路径</span></div><div class="line">DATE=`date <span class="string">'+%Y%m%d'</span> ` <span class="comment">#日期格式（作为文件名）</span></div><div class="line">AGODATE=`date <span class="_">-d</span> <span class="string">'1 days ago'</span> +%Y%m%d` <span class="comment">#前一天</span></div><div class="line">DUMPFILE=<span class="variable">$DATE</span>.sql <span class="comment">#备份文件名</span></div><div class="line">ARCHIVE=<span class="variable">$DATE</span>.sql.tgz <span class="comment">#压缩文件名</span></div><div class="line">OPTIONS=<span class="string">"-u<span class="variable">$USER</span> -p<span class="variable">$PASSWORD</span> <span class="variable">$DATABASE</span>"</span> <span class="comment">#mysqldump 参数 详情见帮助 mysqldump －help</span></div><div class="line"><span class="comment">#判断备份文件存储目录是否存在，否则创建该目录</span></div><div class="line"><span class="keyword">if</span> [ ! <span class="_">-d</span> <span class="variable">$BACKUP_DIR</span> ] ;</div><div class="line"><span class="keyword">then</span></div><div class="line">mkdir -p <span class="string">"<span class="variable">$BACKUP_DIR</span>"</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="comment">#开始备份之前，将备份信息头写入日记文件</span></div><div class="line"><span class="built_in">echo</span> <span class="string">" "</span> &gt;&gt; <span class="variable">$LOGFILE</span></div><div class="line"><span class="built_in">echo</span> <span class="string">" "</span> &gt;&gt; <span class="variable">$LOGFILE</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"———————————————–"</span> &gt;&gt; <span class="variable">$LOGFILE</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"BACKUP DATE:"</span> $(date +<span class="string">"%y-%m-%d %H:%M:%S"</span>) &gt;&gt; <span class="variable">$LOGFILE</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"———————————————– "</span> &gt;&gt; <span class="variable">$LOGFILE</span></div><div class="line"><span class="comment">#切换至备份目录</span></div><div class="line"><span class="built_in">cd</span> <span class="variable">$BACKUP_DIR</span></div><div class="line"><span class="comment">#使用mysqldump 命令备份制定数据库，并以格式化的时间戳命名备份文件</span></div><div class="line">mysqldump <span class="variable">$OPTIONS</span> &gt; <span class="variable">$DUMPFILE</span></div><div class="line"><span class="comment">#判断数据库备份是否成功</span></div><div class="line"><span class="keyword">if</span> [[ <span class="_">-f</span> <span class="variable">$DUMPFILE</span> ]]; <span class="keyword">then</span></div><div class="line"><span class="comment">#创建备份文件的压缩包</span></div><div class="line">tar czvf <span class="variable">$ARCHIVE</span> <span class="variable">$DUMPFILE</span> &gt;&gt; <span class="variable">$LOGFILE</span> 2&gt;&amp;1</div><div class="line"><span class="comment">#输入备份成功的消息到日记文件</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"[<span class="variable">$ARCHIVE</span>] Backup Successful!"</span> &gt;&gt; <span class="variable">$LOGFILE</span></div><div class="line"><span class="comment">#删除原始备份文件，只需保 留数据库备份文件的压缩包即可</span></div><div class="line">rm <span class="_">-f</span> <span class="variable">$DUMPFILE</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"删除备份原文件成功!"</span> &gt;&gt; <span class="variable">$LOGFILE</span></div><div class="line"><span class="keyword">if</span> [[ <span class="_">-f</span> <span class="variable">$AGODATE</span>.sql.tgz ]]; <span class="keyword">then</span></div><div class="line">   <span class="comment">#statements</span></div><div class="line">   rm <span class="_">-f</span> <span class="variable">$AGODATE</span>.sql.tgz</div><div class="line">   <span class="built_in">echo</span> <span class="string">"删除前一天备份文件成功!"</span> &gt;&gt; <span class="variable">$LOGFILE</span></div><div class="line">   <span class="built_in">echo</span> <span class="string">"Database:<span class="variable">$DATABASE</span> Daily Backup Successful"</span> | mailx <span class="_">-s</span> <span class="string">"数据库备份成功"</span> <span class="variable">$WEBMASTER</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="keyword">else</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"Database Backup Fail!(备份失败)"</span> &gt;&gt; <span class="variable">$LOGFILE</span></div><div class="line"><span class="comment">#备份失败后向网站管理者发送邮件提醒，我安装的是mailx</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"Database:<span class="variable">$DATABASE</span> Daily Backup Fail"</span> | mailx <span class="_">-s</span> <span class="string">"数据库备份失败"</span> <span class="variable">$WEBMASTER</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="comment">#输出备份过程结束的提醒消息</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"Backup Process Done(备份完成)"</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="3、-脚本中的知识点"><a href="#3、-脚本中的知识点" class="headerlink" title="3、 脚本中的知识点:"></a>3、 脚本中的知识点:</h5><ol>
<li><strong>if的中的参数:</strong><br>-d 当文件存在并且是一个目录时返回真;<br>-f  当文件存在并且是正规文件时返回真;</li>
<li><strong>&gt;&gt;和&gt;符号的使用:</strong><br>“&gt;&gt;” : 如果文件不存在，将创建新的文件，并将数据送至此文件；如果文件存在，则将数据添加在文件后面;<br>“&gt;” : 如果文件不存在，同上，如果文件存在，先将文件清空，然后将数据填入此文件;</li>
<li><strong>mailx发送邮件:</strong><br> 我用的是centos，首先安装mailx <code>yum -y install mailx</code>；<br> 安装成功后设置mailx参数，编辑 /etc/mail.rc文件<code>vim /etc/mail.rc</code>;<br> 在文件的末行添加以下文字: <figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">set</span> from=yuorname@<span class="number">139</span>.<span class="keyword">com</span>  #发送邮箱号  </div><div class="line"><span class="keyword">set</span> smtp=smtp.<span class="number">139</span>.<span class="keyword">com</span>  #邮件服务器</div><div class="line"><span class="keyword">set</span> smtp-auth-user=yourname  #邮箱用户名</div><div class="line"><span class="keyword">set</span> smtp-auth-password=yourpassword  #邮箱密码</div><div class="line"><span class="keyword">set</span> smtp-auth=login #登录方式</div><div class="line"> 添加完了后   发送邮件命令为: `<span class="keyword">echo</span> <span class="string">"邮箱内容"</span>| mailx -s <span class="string">"邮件标题"</span> 邮箱号</div></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li><strong>删除上次备份的文件:</strong><br> 上面我设置了个<code>AGODATE=</code>date -d ‘1 days ago’ +%Y%m%d<code>#前一天</code>;如果你需要保留2天的数据，把里面的1改成2就行了，多天以此类推。<h5 id="4、-我们按照上面的方法再编写备份完整目录文件的shell，就没什么好说的了，方法同上，下面是代码。"><a href="#4、-我们按照上面的方法再编写备份完整目录文件的shell，就没什么好说的了，方法同上，下面是代码。" class="headerlink" title="4、 我们按照上面的方法再编写备份完整目录文件的shell，就没什么好说的了，方法同上，下面是代码。"></a>4、 我们按照上面的方法再编写备份完整目录文件的shell，就没什么好说的了，方法同上，下面是代码。</h5></li>
</ol>
<pre><code class="bash"><span class="meta">#!/bin/bash</span>
<span class="comment">#备份www目录文件夹</span>
<span class="comment">#Auther :wangwenfan</span>
<span class="comment">#Date :2017-02-22</span>
<span class="comment">#配置参数</span>
DATA_DIR=www <span class="comment">#待备份的文件夹</span>
BACKUP_DIR=/home/wangwenfan/topons/ <span class="comment">#备份文件路径</span>
LOGFILE=/home/wangwenfan/topons/wwwroot_backup.log <span class="comment">#日志记录文件</span>
WEBMASTER=787802868@qq.com <span class="comment">#管理员邮箱地址，用以发送备份失败消息提醒</span>
DATE=`date <span class="string">'+%Y%m%d'</span> ` <span class="comment">#日期格式</span>
F_DATE=`date <span class="string">'+%Y%m%d %H:%M:%S'</span> ` <span class="comment">#详细日期格式</span>
AGODATE=`date <span class="_">-d</span> <span class="string">'7 days ago'</span> +%Y%m%d` <span class="comment">#上一周备份时间</span>
BACKUP_FILE=<span class="variable">${DATA_DIR}</span><span class="variable">${DATE}</span>.tgz <span class="comment">#备份压缩文件名</span>
<span class="comment">#进入备份文件夹</span>
<span class="keyword">if</span> [[ ! <span class="_">-d</span> <span class="variable">$BACKUP_DIR</span> ]]; <span class="keyword">then</span>
   mkdir -p <span class="string">"<span class="variable">$BACKUP_DIR</span>"</span>
<span class="keyword">fi</span>
<span class="comment">#开始备份之前将信息写入日志头部</span>
<span class="built_in">echo</span> <span class="string">""</span> &gt;&gt; <span class="variable">$LOGFILE</span>
<span class="built_in">echo</span> <span class="string">""</span> &gt;&gt; <span class="variable">$LOGFILE</span>
<span class="built_in">echo</span> <span class="string">"-----------------"</span> &gt;&gt; <span class="variable">$LOGFILE</span>
<span class="built_in">echo</span> <span class="string">"BACKUPDATE: <span class="variable">$F_DATE</span> ,准备开始备份!"</span> &gt;&gt; <span class="variable">$LOGFILE</span>
<span class="built_in">echo</span> <span class="string">"-----------------"</span> &gt;&gt; <span class="variable">$LOGFILE</span>
<span class="comment">#切换至备份的目录</span>
<span class="built_in">cd</span> <span class="variable">$BACKUP_DIR</span>
<span class="comment">#压缩待备份的目录到该目录下</span>
tar czvf <span class="variable">$BACKUP_FILE</span> ../../<span class="variable">${DATA_DIR}</span>
<span class="keyword">if</span> [[ <span class="_">-f</span> <span class="variable">$BACKUP_FILE</span> ]]; <span class="keyword">then</span>
   <span class="built_in">echo</span> <span class="string">"Backup Successful (备份文件成功)"</span> &gt;&gt; <span class="variable">$LOGFILE</span>
<span class="comment">#删除上次备份的文件</span>
   <span class="keyword">if</span> [[ <span class="_">-f</span> <span class="variable">${DATA_DIR}</span><span class="variable">${AGODATE}</span>.tgz ]]; <span class="keyword">then</span>
        rm <span class="_">-f</span> <span class="variable">${DATA_DIR}</span><span class="variable">${AGODATE}</span>.tgz
      <span class="built_in">echo</span> <span class="string">"Delete Successful <span class="variable">${DATA_DIR}</span><span class="variable">${AGODATE}</span>.tgz (删除文件成功)"</span> &gt;&gt; <span class="variable">$LOGFILE</span>
      mail <span class="_">-s</span> <span class="string">"DATATIME:<span class="variable">$F_DATE</span>,<span class="variable">$DATA_DIR</span> Backup Successful  (项目文件备份成功)"</span> <span class="variable">$WEBMASTER</span>
   <span class="keyword">fi</span>
   <span class="comment">#备份成功发送邮件</span>
   <span class="built_in">echo</span> <span class="string">"DATATIME:<span class="variable">$F_DATE</span>,<span class="variable">$DATA_DIR</span> Daily Backup Successful (项目文件备份成功)"</span> | mailx <span class="_">-s</span> <span class="string">"文件备份成功"</span>  <span class="variable">$WEBMASTER</span>
   <span class="built_in">echo</span> <span class="string">"给<span class="variable">${WEBMASTER}</span>发送邮件成功"</span> &gt;&gt; <span class="variable">$LOGFILE</span>
<span class="keyword">else</span>
   <span class="built_in">echo</span> <span class="string">"wwwroot Backup fail! (文件备份失败)"</span> &gt;&gt; <span class="variable">$LOGFILE</span>
<span class="comment">#备份失败后向网站管理者发送邮件提醒，需要mailutils或者类似终端下发送邮件工具的支持</span>
<span class="built_in">echo</span> <span class="string">"DATATIME:<span class="variable">$F_DATE</span>,<span class="variable">$DATA_DIR</span> Daily Backup Fail (项目文件备份失败)"</span> | mailx <span class="_">-s</span> <span class="string">"文件备份失败"</span>  <span class="variable">$WEBMASTER</span>
<span class="keyword">fi</span>
<span class="comment">#执行完成</span>
<span class="built_in">echo</span> <span class="string">"Script Successful!(脚本执行成功)"</span> &gt;&gt; <span class="variable">$LOGFILE</span>
</code></pre>
<h5 id="5、Shell写完了，我们开始设置crontab开始定时任务计划。"><a href="#5、Shell写完了，我们开始设置crontab开始定时任务计划。" class="headerlink" title="5、Shell写完了，我们开始设置crontab开始定时任务计划。"></a>5、Shell写完了，我们开始设置crontab开始定时任务计划。</h5><ul>
<li>crontab介绍 :</li>
</ul>
<ol>
<li>command 命令参数解释<br><em>　　</em>　　<em>　　</em>　　<em>　　<br>分　时　日　月　周　命令<br>第1列表示分钟1～59 每分钟用</em>或者 */1表示<br>第2列表示小时1～23（0表示0点）<br>第3列表示日期1～31<br>第4列表示月份1～12<br>第5列标识号星期0～6（0表示星期天）<br>详细使用请看<a href="http://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/crontab.html" target="_blank" rel="external">linuxtools介绍</a>，写得很详细。</li>
<li>我们用<code>crontab -l</code>查看当前用户的crontab文件内容，如果不指定用户，则表示显示当前用户的crontab文件内容。然后用<code>crontab -e</code> 编辑crontab文件。<img src="https://wangwenfan.top/images/20170222175648.png" alt="编辑crontab"></li>
<li>然后重启crontab就可以了，在系统中有service这个命令时：<br>service crond start //启动服务<br>service crond stop //关闭服务<br>service crond restart //重启服务</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前两天给客户搭建了一台Linux服务器给做了一个定时备份数据库和网站目录文件夹。下面记录下搭建过程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;1、整个执行过程主要分两步&quot;&gt;&lt;a href=&quot;#1、整个执行过程主要分两步&quot; class=&quot;
    
    </summary>
    
    
      <category term="work" scheme="http://www.wangwenfan.com/tags/work/"/>
    
  </entry>
  
  <entry>
    <title>迟来的的2016年终总结</title>
    <link href="http://www.wangwenfan.com/posts/uncategorized/2017-01-04-%E8%BF%9F%E6%9D%A5%E7%9A%84%E7%9A%842016%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93.html"/>
    <id>http://www.wangwenfan.com/posts/uncategorized/2017-01-04-迟来的的2016年终总结.html</id>
    <published>2017-01-04T03:12:37.000Z</published>
    <updated>2017-02-24T10:17:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>今年的年终总结本来会迟到的，前两天电脑坏了，还好今天修好了。刚刚看了时间的朋友跨年演讲，里面说到我们在消费时不光要考虑金钱成本，更重要的是时间成本。回顾2016的点滴，喜忧参半，没有什么特别突出的地方。翻出2015年的年终总结，对照当时给自己制定的目标，大部分还是完成了，有一些还在进行中。有几个还没完成的，没有完成的慢慢的就被淘汰了，应该不是自己真正想要的东西，可能是所谓的伪目标吧。</p>
<p>去年告诉自己会跳一次槽，工资涨一点，今年反而跳了两次，年初一次，年尾一次，薪水也超出了自己的预期。还有每个月看一本书，每周看一部电影。由于现在是一名程序员，看技术方面的书籍要多一点，大概看了有四五本的样子。电影从国庆过后就看得比较少了，上半年基本还能保持。而且对美剧产生了兴趣，看了有两三部的样子。专业技能在利用业余时间多多少少有进步了一点，学会了git和svn，并试着用它们管理代码，到后面习惯掌握它们。liunx系统的继续学习，个人搭建公司服务器，使用的centos，自己电脑安装ubuntu使用，基本能达到熟练的效果。在上一个公司对微信开发这一块用得比较多，可以说扩宽了自己的知识面和短板吧。后面自己又和朋友合伙购买了vps，一方面用来科学上网，另一方面当作一个测试服务器。总体来说，2016年自己在工作上有进步，但不是特别大，有一点令自己满意的就是，大的方向是有了，不再像以前那么迷茫了。因为，没有方向，光走是没有意义的。在接下来的2017年需要好好管理自己的时间，技术上的深度和广度都还不够，感觉自己离专业两个字还有很大的差距。应该在数据库、PHP高级技术、linux、JavaScript和css这几方面提升一下。首先得认认真真的把之前买的《JavaScript权威指南》看一篇吧。然后继续坚持写技术博客，坚持阅读，养成一个良好的阅读习惯和保持一个阅读量，先计划一个月一本书吧。希望在写2017年的年终总结的时候能列出这12本书的书单并全部阅读过。</p>
<p>经过一年多的努力，最值得高兴的是各种款也差不多要还完了，预料之中的话下个月的完了。而且从2017起开始记账了，继续使用了以前没坚持下来的随手记。因为现在还是在财富积累的初期阶段，要懂得开源节流。虽然谈不上理财，但是一方面可以养成一个花钱用钱的好习惯，另一方面可以总结出每个月的钱花在哪，有些东西买了到底是不是自己真正想要的。这样坚持记一年，希望在下一次的年终总结中可以晒出一年的账单。</p>
<p>生活方面，这一年回家的次数变多了，这么几年了，今年应该是陪伴家人时间最多的一年吧。情侣之间虽然偶尔也有争吵，有时也会冷战和赌气。但放眼望去，一起走过来的这两三百天时间。其实大家都进步了，可能不够想象中的完美。每次看到她都感觉变成熟了进步了，其实我真的很 开心。至于爱不爱，其实真的没怀疑过。希望自己在2017能改掉一些固执的牛脾气。多用有温度的话语去感染别人。哪怕自己是对的。感情和家庭像工作一样需要用心去经营。</p>
<p>嗯！就这么多，提高自己的专业技术能力，养成阅读的习惯，坚持写博客，坚持记账，多陪伴家人，脾气好一点，用心去热爱生活，虽然生活是那么现实。多挣钱，让自己变得更好，把账单、书单、爱情都晒在2017的总结里。</p>
<p>  <strong>2016年12月31日</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今年的年终总结本来会迟到的，前两天电脑坏了，还好今天修好了。刚刚看了时间的朋友跨年演讲，里面说到我们在消费时不光要考虑金钱成本，更重要的是时间成本。回顾2016的点滴，喜忧参半，没有什么特别突出的地方。翻出2015年的年终总结，对照当时给自己制定的目标，大部分还是完成了，有
    
    </summary>
    
    
      <category term="life" scheme="http://www.wangwenfan.com/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>tp5使用PHPexcel导出文件</title>
    <link href="http://www.wangwenfan.com/posts/uncategorized/2017-01-04-tp5%E4%BD%BF%E7%94%A8PHPexcel%E5%AF%BC%E5%87%BA%E6%96%87%E4%BB%B6.html"/>
    <id>http://www.wangwenfan.com/posts/uncategorized/2017-01-04-tp5使用PHPexcel导出文件.html</id>
    <published>2017-01-04T01:37:46.000Z</published>
    <updated>2017-02-24T10:16:19.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="tp5使用PHPexcel导出文件"><a href="#tp5使用PHPexcel导出文件" class="headerlink" title="tp5使用PHPexcel导出文件"></a>tp5使用PHPexcel导出文件</h2><h3 id="一、使用composer安装phpexcel"><a href="#一、使用composer安装phpexcel" class="headerlink" title="一、使用composer安装phpexcel"></a>一、使用composer安装phpexcel</h3><p>第一种方式：在项目根目录下的composer.json里面添加phpexcel<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">"require": &#123;</div><div class="line">        "phpoffice/phpexcel": "1.8.*"</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>进入composer ,cd到根目录 执行 <code>composer install</code><br>第二种方式: 直接运行命令<code>php composer.phar require phpoffice/phpexcel</code></p>
<h3 id="二、封装导出方法"><a href="#二、封装导出方法" class="headerlink" title="二、封装导出方法"></a>二、封装导出方法</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getExcel</span><span class="params">($fileName, $headArr, $data)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">//对数据进行检验</span></div><div class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($data) || !is_array($data)) &#123;</div><div class="line">        <span class="keyword">die</span>(<span class="string">"data must be a array"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//检查文件名</span></div><div class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($fileName)) &#123;</div><div class="line">        <span class="keyword">exit</span>;</div><div class="line">    &#125;</div><div class="line">    $date = date(<span class="string">"Y_m_d"</span>, time());</div><div class="line">    $fileName .= <span class="string">"_&#123;$date&#125;.xls"</span>;</div><div class="line"></div><div class="line">    <span class="comment">//创建PHPExcel对象，注意，不能少了\</span></div><div class="line">    $objPHPExcel = <span class="keyword">new</span> \PHPExcel();</div><div class="line">    $objProps = $objPHPExcel-&gt;getProperties();</div><div class="line"></div><div class="line">    <span class="comment">//设置表头</span></div><div class="line">    $key = ord(<span class="string">"A"</span>);</div><div class="line">    <span class="keyword">foreach</span> ($headArr <span class="keyword">as</span> $v) &#123;</div><div class="line">        $colum = chr($key);</div><div class="line">        $objPHPExcel-&gt;setActiveSheetIndex(<span class="number">0</span>)-&gt;setCellValue($colum . <span class="string">'1'</span>, $v);</div><div class="line">        $key += <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    $column = <span class="number">2</span>;</div><div class="line">    $objActSheet = $objPHPExcel-&gt;getActiveSheet();</div><div class="line">    <span class="keyword">foreach</span> ($data <span class="keyword">as</span> $key =&gt; $rows) &#123; <span class="comment">//行写入</span></div><div class="line">        $span = ord(<span class="string">"A"</span>);</div><div class="line">        <span class="keyword">foreach</span> ($rows <span class="keyword">as</span> $keyName =&gt; $value) &#123;<span class="comment">// 列写入</span></div><div class="line">            $j = chr($span);</div><div class="line">            $objActSheet-&gt;setCellValue($j . $column, $value);</div><div class="line">            $span++;</div><div class="line">        &#125;</div><div class="line">        $column++;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    $fileName = iconv(<span class="string">"utf-8"</span>, <span class="string">"gb2312"</span>, $fileName);</div><div class="line">    <span class="comment">//重命名表</span></div><div class="line">    <span class="comment">// $objPHPExcel-&gt;getActiveSheet()-&gt;setTitle('test');</span></div><div class="line">    <span class="comment">//设置活动单指数到第一个表,所以Excel打开这是第一个表</span></div><div class="line">    $objPHPExcel-&gt;setActiveSheetIndex(<span class="number">0</span>);</div><div class="line">    header(<span class="string">'Content-Type: application/vnd.ms-excel'</span>);</div><div class="line">    header(<span class="string">"Content-Disposition: attachment;filename=\"$fileName\""</span>);</div><div class="line">    header(<span class="string">'Cache-Control: max-age=0'</span>);</div><div class="line"></div><div class="line">    $objWriter = \PHPExcel_IOFactory::createWriter($objPHPExcel, <span class="string">'Excel5'</span>);</div><div class="line">    $objWriter-&gt;save(<span class="string">'php://output'</span>); <span class="comment">//文件通过浏览器下载</span></div><div class="line">    <span class="keyword">exit</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> 然后调用刚刚封装的方法<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">out</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="comment">//要导出的数据放在一个数组里</span></div><div class="line">    $data=<span class="keyword">array</span>(</div><div class="line">        <span class="keyword">array</span>(<span class="string">'username'</span>=&gt;<span class="string">'zhangsan'</span>,<span class="string">'password'</span>=&gt;<span class="string">"123456"</span>),</div><div class="line">        <span class="keyword">array</span>(<span class="string">'username'</span>=&gt;<span class="string">'lisi'</span>,<span class="string">'password'</span>=&gt;<span class="string">"abcdefg"</span>),</div><div class="line">        <span class="keyword">array</span>(<span class="string">'username'</span>=&gt;<span class="string">'wangwu'</span>,<span class="string">'password'</span>=&gt;<span class="string">"111111"</span>),</div><div class="line">        );</div><div class="line">    <span class="comment">//导出的文件名</span></div><div class="line">    $filename=<span class="string">"test_excel"</span>;</div><div class="line">    <span class="comment">//每一列的标题</span></div><div class="line">    $headArr=<span class="keyword">array</span>(<span class="string">"用户名"</span>,<span class="string">"密码"</span>);</div><div class="line">    <span class="keyword">$this</span>-&gt;getExcel($filename,$headArr,$data);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>后面我们直接调用控制器里的 out方法就可以了！</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;tp5使用PHPexcel导出文件&quot;&gt;&lt;a href=&quot;#tp5使用PHPexcel导出文件&quot; class=&quot;headerlink&quot; title=&quot;tp5使用PHPexcel导出文件&quot;&gt;&lt;/a&gt;tp5使用PHPexcel导出文件&lt;/h2&gt;&lt;h3 id=&quot;一、使用c
    
    </summary>
    
    
      <category term="work" scheme="http://www.wangwenfan.com/tags/work/"/>
    
  </entry>
  
  <entry>
    <title>常用的设计模式之单例模式</title>
    <link href="http://www.wangwenfan.com/posts/uncategorized/2016-12-29-%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html"/>
    <id>http://www.wangwenfan.com/posts/uncategorized/2016-12-29-常用的设计模式之单例模式.html</id>
    <published>2016-12-29T02:54:39.000Z</published>
    <updated>2017-02-24T10:16:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>单例模式就是只能让我们实例化一次和创建一个对象的类。像文件类，session类等只需要实例化一次就可以在全局中应用。</p>
<h5 id="1、-非单例模式的普通类，会出现的问题。"><a href="#1、-非单例模式的普通类，会出现的问题。" class="headerlink" title="1、 非单例模式的普通类，会出现的问题。"></a>1、 非单例模式的普通类，会出现的问题。</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Db</span></span>&#123;</div><div class="line">   <span class="keyword">private</span>  $instance=<span class="keyword">null</span>;</div><div class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($config=[])</span></span></div><div class="line">   &#123;</div><div class="line">        $dsn = sprintf(<span class="string">'mysql:host=%s;dbname=%s'</span>, $config[<span class="string">'db_host'</span>], $config[<span class="string">'db_name'</span>]);</div><div class="line">        <span class="keyword">$this</span>-&gt;db = <span class="keyword">new</span> PDO($dsn, $config[<span class="string">'db_user'</span>], $config[<span class="string">'db_pass'</span>]);</div><div class="line">   &#125;</div><div class="line">&#125;</div><div class="line">$config = <span class="keyword">array</span>(</div><div class="line">    <span class="string">'db_name'</span> =&gt; <span class="string">'phpcmsv9'</span>,</div><div class="line">    <span class="string">'db_host'</span> =&gt; <span class="string">'localhost'</span>,</div><div class="line">    <span class="string">'db_user'</span> =&gt; <span class="string">'root'</span>,</div><div class="line">    <span class="string">'db_pass'</span> =&gt; <span class="string">'root'</span></div><div class="line">);</div><div class="line"></div><div class="line">$ob=<span class="keyword">new</span> Db($config);</div><div class="line">var_dump($ob);</div><div class="line">$ob2=<span class="keyword">new</span> Db($config);</div><div class="line">var_dump($ob2);</div><div class="line">$ob3=<span class="keyword">new</span> Db($config);</div><div class="line">var_dump($ob3);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<p><strong>上面会输出的内容为：</strong><br><figure class="highlight plain"><figcaption><span>(1) &#123;</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">  [&quot;db&quot;:&quot;Db&quot;:private]=&gt;</div><div class="line">  object(PDO)#2 (0) &#123;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">object(Db)#3 (1) &#123;</div><div class="line">  [&quot;db&quot;:&quot;Db&quot;:private]=&gt;</div><div class="line">  object(PDO)#4 (0) &#123;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">object(Db)#5 (1) &#123;</div><div class="line">  [&quot;db&quot;:&quot;Db&quot;:private]=&gt;</div><div class="line">  object(PDO)#6 (0) &#123;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>每个对象都会占用一个资源，如果实例100次就会占用100次，非常消耗服务器内存和资源。</p>
<h4 id="2、-单例模式例子"><a href="#2、-单例模式例子" class="headerlink" title="2、 单例模式例子"></a>2、 单例模式例子</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</div><div class="line">   <span class="keyword">private</span> <span class="keyword">static</span> $instance=<span class="keyword">null</span>;</div><div class="line">   <span class="keyword">private</span>  $db=<span class="keyword">null</span>;</div><div class="line">   <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($config=array<span class="params">()</span>)</span></span></div><div class="line">   &#123;</div><div class="line">        $dsn = sprintf(<span class="string">'mysql:host=%s;dbname=%s'</span>, $config[<span class="string">'db_host'</span>], $config[<span class="string">'db_name'</span>]);</div><div class="line">        <span class="keyword">$this</span>-&gt;db = <span class="keyword">new</span> PDO($dsn, $config[<span class="string">'db_user'</span>], $config[<span class="string">'db_pass'</span>]);</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span><span class="params">($config=array<span class="params">()</span>)</span></span></div><div class="line">   &#123;</div><div class="line">      <span class="keyword">if</span>(<span class="keyword">self</span>::$instance == <span class="keyword">null</span>) &#123;</div><div class="line">         <span class="keyword">self</span>::$instance= <span class="keyword">new</span> <span class="keyword">self</span>($config);</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">return</span> <span class="keyword">self</span>::$instance;</div><div class="line">   &#125;</div><div class="line">&#125;</div><div class="line">$config = <span class="keyword">array</span>(</div><div class="line">    <span class="string">'db_name'</span> =&gt; <span class="string">'phpcmsv9'</span>,</div><div class="line">    <span class="string">'db_host'</span> =&gt; <span class="string">'localhost'</span>,</div><div class="line">    <span class="string">'db_user'</span> =&gt; <span class="string">'root'</span>,</div><div class="line">    <span class="string">'db_pass'</span> =&gt; <span class="string">'root'</span></div><div class="line">);</div><div class="line">$obj=Test::getInstance($config);</div><div class="line">var_dump($obj);</div><div class="line">$obj1=Test::getInstance($config);</div><div class="line">var_dump($obj1);</div><div class="line">$obj2=Test::getInstance($config);</div><div class="line">var_dump($obj2);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<p><strong>上面的输出内容为：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">object(Test)#1 (1) &#123;</div><div class="line">  [&quot;db&quot;:&quot;Test&quot;:private]=&gt;</div><div class="line">  object(PDO)#2 (0) &#123;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">object(Test)#1 (1) &#123;</div><div class="line">  [&quot;db&quot;:&quot;Test&quot;:private]=&gt;</div><div class="line">  object(PDO)#2 (0) &#123;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">object(Test)#1 (1) &#123;</div><div class="line">  [&quot;db&quot;:&quot;Test&quot;:private]=&gt;</div><div class="line">  object(PDO)#2 (0) &#123;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>我们可以看出用单例模式，每次调用都是返回的同一个对象，获得的对象ID是一样的。我们控制住基类，在源头上限制这个类，使它无法生成多个对象，直接返回。</p>
<h4 id="3、总结"><a href="#3、总结" class="headerlink" title="3、总结"></a>3、总结</h4><ul>
<li>单例模式了违法单一职责原则，因为它自己控制了自己的实例化和生命周期。</li>
<li>单例模式对应用表现为全局状态。全局状态被视为是不良设计，因为所有代码都可以修改它的值。在调试的时候，很难弄清楚全局变量的当前状态是哪一段代码造成的。</li>
<li>在单元测试的时候，单例模式难以测试。如果不进行单元测试，又会影响系统的质量。</li>
<li>单例模式在应用请求的整个生命周期中都有效，这点类似全局变量，会降低程序的可测试性。大部分情况下，也可以用依赖注入来代替单例模式，避免在应用中引入不必要的耦合。</li>
<li>所以，对于仅需生成一个对象的类，首先考虑用依赖注入方式，其次考虑用单例模式来实现。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;单例模式就是只能让我们实例化一次和创建一个对象的类。像文件类，session类等只需要实例化一次就可以在全局中应用。&lt;/p&gt;
&lt;h5 id=&quot;1、-非单例模式的普通类，会出现的问题。&quot;&gt;&lt;a href=&quot;#1、-非单例模式的普通类，会出现的问题。&quot; class=&quot;heade
    
    </summary>
    
    
      <category term="work" scheme="http://www.wangwenfan.com/tags/work/"/>
    
  </entry>
  
  <entry>
    <title>hexo 和github搭建个人博客</title>
    <link href="http://www.wangwenfan.com/posts/uncategorized/2016-12-15-hexo%20%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.html"/>
    <id>http://www.wangwenfan.com/posts/uncategorized/2016-12-15-hexo 和github搭建个人博客.html</id>
    <published>2016-12-15T07:12:20.000Z</published>
    <updated>2017-05-27T09:06:11.530Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、需要安装的软件"><a href="#一、需要安装的软件" class="headerlink" title="一、需要安装的软件"></a>一、需要安装的软件</h3><h4 id="1、安装git"><a href="#1、安装git" class="headerlink" title="1、安装git"></a>1、安装git</h4><ul>
<li>ubuntu上安装git ：<br> <code>sudo apt-get install git</code></li>
<li>windows直接下载git安装包<h4 id="2、安装nodejs"><a href="#2、安装nodejs" class="headerlink" title="2、安装nodejs"></a>2、安装nodejs</h4></li>
<li>ubuntu 上安装node    </li>
<li><code>apt install nodejs</code><br><code>apt all npm</code></li>
<li>Windows到nodejs<a href="http://nodejs.cn/" target="_blank" rel="external">官网</a>下载最新版安装包。</li>
</ul>
<h3 id="二、正式安装hexo"><a href="#二、正式安装hexo" class="headerlink" title="二、正式安装hexo"></a>二、正式安装hexo</h3><ul>
<li>进入你的文件目录</li>
<li>执行以下命令 <code>sudo npm install -g hexo</code></li>
<li>软件安装完成后初始化它 <code>hexo init</code></li>
<li>执行成功后就本地就安装完成了，当前目录就是博客的根目录。</li>
<li>生成静态页面 <code>hexo generate</code> 或者 <code>hexo g</code></li>
<li>本地启动预览 <code>hexo server</code> 或者 <code>hexo s</code> 后面可以加上 <code>--debug</code> 参数查看运行状态，浏览器输入<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> 查看本地预览，如果网站打开了说明配置OK。<h3 id="三、配置github"><a href="#三、配置github" class="headerlink" title="三、配置github"></a>三、配置github</h3></li>
<li>进入你的<a href="https://github.com" target="_blank" rel="external">github</a>，新建一个仓库名字为：名字+github.io</li>
<li>打开你的博客根目录下的 <code>vim _config.yml</code>文件的最后几行，修改 `<br><img src="https://wangwenfan.top/images/567576/ec12bf9c6c2fef15.png" alt="配置文件"></li>
<li>然后执行命令 <code>hexo g</code>  <code>hexo d</code>,第一条是重新生成静态页面，第二天是部署到github，执行成功后静态页面就提交到你的github仓库里了。</li>
<li>最后访问你的github地址 xxx.github.io就可以看到效果了。<h3 id="四、绑定域名到github"><a href="#四、绑定域名到github" class="headerlink" title="四、绑定域名到github"></a>四、绑定域名到github</h3></li>
<li>到你的域名解析后台解析或者修改一个新的域名地址，记录类型为CNAME，记录值为你的github仓库地址：xxx.github.io 如下图所示：<img src="https://wangwenfan.top/images/8461225d86409cb5.png" alt="图片"></li>
<li>然后在你的博客目录 -&gt;source目录下面新建一个CNAME的文件，内容为你刚刚解析的域名地址。<strong>（所以需要提交到github的文件都是放在source这个目录里面的）</strong></li>
<li>再次执行 <code>hexo g</code>和 <code>hexo d</code>就可以了<h3 id="五、hexo常用命令"><a href="#五、hexo常用命令" class="headerlink" title="五、hexo常用命令"></a>五、hexo常用命令</h3></li>
<li><code>hexo new &#39;filename</code> 创建新文章</li>
<li><code>hexo clean</code> 清除缓存</li>
<li><code>hexo new page &#39;filename&#39;</code> 创建新页面</li>
<li><code>hexo g</code> 生成页面</li>
<li><code>hexo d</code>部署项目( 生成并部署可以用hexo d -g )</li>
<li><code>hexo s</code> 开启预览访问<h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><blockquote>
<p>如果你想建设一个写文章的bolg的话，用hexo和github真的是一个不错的选择，没有自己搭建服务器的烦恼。可以把维护网站的时间用来多思考，总结，和分享。又比在其他第三方平台上多了一些个性化的功能。反正我觉得挺棒的。</p>
</blockquote>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、需要安装的软件&quot;&gt;&lt;a href=&quot;#一、需要安装的软件&quot; class=&quot;headerlink&quot; title=&quot;一、需要安装的软件&quot;&gt;&lt;/a&gt;一、需要安装的软件&lt;/h3&gt;&lt;h4 id=&quot;1、安装git&quot;&gt;&lt;a href=&quot;#1、安装git&quot; class=&quot;he
    
    </summary>
    
    
      <category term="work" scheme="http://www.wangwenfan.com/tags/work/"/>
    
  </entry>
  
</feed>
